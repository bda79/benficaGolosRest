{"version":3,"sources":["service/utils.js","service/dataUtils.js","components/login/register.js","service/StorageData.js","components/login/signin.js","components/login/login.js","components/login/forgot.js","components/login/reset.js","components/custom/bootstraptab.js","components/custom/selectSearch.js","components/pages/normal/home.js","components/pages/userComponents/addUser.js","components/pages/userComponents/editUser.js","components/pages/userComponents/userTable.js","components/pages/userComponents/statusTable.js","components/pages/normal/user.js","components/pages/teamComponents/addTeam.js","components/pages/teamComponents/editTeam.js","components/pages/teamComponents/teamTable.js","components/pages/admin/team.js","components/pages/championshipComponents/addChampionship.js","components/pages/championshipComponents/editChampionship.js","components/pages/championshipComponents/championshipTable.js","components/pages/admin/championship.js","components/pages/paymentComponents/addPayment.js","components/pages/paymentComponents/editPayment.js","components/pages/paymentComponents/paymentTable.js","components/pages/admin/payment.js","components/pages/gameComponents/addGame.js","components/pages/gameComponents/editGame.js","components/pages/gameComponents/gameTable.js","components/pages/admin/game.js","components/pages/seasonComponents/addSeason.js","components/pages/seasonComponents/gameModal.js","components/pages/seasonComponents/editSeason.js","components/pages/seasonComponents/seasonTable.js","components/pages/admin/season.js","components/nav/nav.js","routes/routeWrapper.js","routes/allRoutes.js","App.js","serviceWorker.js","index.js","img/slbLogo.jpg","service/config.js"],"names":["module","exports","ImageUtils","validateImage","img","name","match","size","getImage","path","process","ServiceData","execute","options","a","baseUrl","server_url","result","console","log","axios","then","response","data","error","gameExecute","pathGame","pathChamp","pathTeam","all","spread","games","champs","teams","seasonExecute","pathSeason","seasons","paymentExecute","pathPayment","pathUser","payments","users","homeExecute","pathMe","pathStatus","me","status","normalUserExecute","method","userData","headers","token","file","emailRegex","RegExp","passwordRegex","valid","errors","rest","Object","values","forEach","val","length","Register","props","onChange","e","preventDefault","target","value","state","email","test","password","setState","togglePassword","showPassword","handleSubmit","isAdmin","sessionStorage","setItem","isLogged","submitError","this","iconName","getItem","to","className","ref","containerRef","src","loginImg","alt","htmlFor","type","placeholder","style","position","display","autoComplete","onClick","right","bottom","cursor","React","Component","Storage","add","key","v","JSON","stringify","get","item","parse","delete","removeItem","clear","inputStyle","marginTop","marginBottom","groupStyle","navStyle","Signin","loadData","login","catch","err","Login","isLogginActive","rightSide","classList","remove","prevState","current","currentActive","container","changeState","bind","RightSide","Forgot","toLogin","redirect","sendEmail","success","jwt","require","Reset","reset","params","decoded","verify","endDate","moment","exp","now","Date","diff","diffDuration","duration","minutes","SearchBar","Search","ReactTable","useState","listData","setData","maxRows","setMaxRows","useEffect","handleDataChange","paginationSize","pageStartIndex","hideSizePerPage","hidePageListOnlyOnePage","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","from","disablePageTitle","sizePerPageList","text","keyField","columns","search","_props","tableId","searchID","searchProps","baseProps","pagination","paginationFactory","noDataIndication","defaultSorted","headerWrapperClasses","bodyClasses","wrapperClasses","selectRow","onDataSizeChange","Select","setValue","hint","Home","_isMounted","fillState","seasonId","user","dbSeasons","currentSeason","filter","s","_id","seasonApi","map","season","mapSeasons","selectedSeason","mapStatus","goals","pay","nPay","onChangeSeason","getData","getCurrentData","StatusTable","dataField","hidden","sort","headerAlign","footerAlign","column","colIndex","footer","formatter","cell","row","columnData","reduce","acc","order","GameTable","textAlign","date","format","homeTeam","logo","awayTeam","isDummyField","padding","homeGoals","awayGoals","statusPath","res","errorStyle","paddingTop","textShadow","color","AddUser","initialState","setUser","setShowPassword","setError","handleInputChange","event","_value","checked","onSubmit","schema","Joi","string","allow","min","max","required","regex","message","boolean","validate","validateUser","details","addUser","EditUser","currentUser","updateUser","setEditing","cancelNonAdminEdit","UserTable","editRow","id","deleteUser","total","labelStyle","fontWeight","loadUsers","admin","cUser","loadStatus","userID","seasonID","getUser","saveUserBD","deleteUserBD","User","setUsers","setStatus","setSeasons","setSelectedSeason","setCurrentUser","editing","mounted","concat","statusApi","index","_addUser","addUserInBD","newUser","bdUser","_updateUser","_","isEqual","saveUser","updatedUser","find","AddTeam","sigla","team","setTeam","imgUrl","setImg","fileInput","createRef","reader","FileReader","files","onload","t","readAsDataURL","handleImage","el","click","validateTeam","addTeam","EditTeam","readMode","setReadMode","currentTeam","updateTeam","TeamTable","deleteTeam","loadTeam","saveTeamBD","haveFile","formData","FormData","append","deleteTeamBD","Team","setTeams","setCurrentTeam","_addTeam","addTeamInBD","bdTeam","AddChampionship","championship","setChampionship","validateChampionship","addChampionship","EditChampionship","currentChampionship","updateChampionship","ChampionshipTable","deleteChampionship","championships","loadChampionship","saveChampionshipBD","deleteChampionshipBD","Championship","setCurrentChampionship","_addChampionship","addChampionshipInBD","bdChampionship","champ","AddPayment","userId","amount","payment","setPayment","selectedUser","setSelectedUser","usersApi","errorMsg","paymentValidator","number","validatePayment","addPayment","EditPayment","currentPayment","updatePayment","PaymentTable","deletePayment","savePaymentBD","deletePaymentBD","Payment","setPayments","setCurrentPayment","_addPayment","addPaymentInBD","bdPayment","scoreValue","minWidth","maxWidth","getTeamName","AddGame","championshipId","homeTeamId","awayTeamId","game","setGame","setChamps","selectedChamp","setSelectedChamp","selectedHTeam","setSelectedHTeam","selectedATeam","setSelectedATeam","teamsApi","champsApi","gameValidator","validateGame","addGame","EditGame","currentGame","updateGame","deleteGame","saveGameBD","deleteGameBD","Game","setGames","setChampionships","setCurrentGame","_addGame","addGameInBD","bdGame","AddSeason","begin","end","setSeason","seasonValidator","validateSeason","addSeason","GameModal","show","top","left","backgroundColor","zIndex","children","onClose","gameColumns","EditSeason","open","setOpen","bdGames","setBDGames","mode","setMode","filterGames","bd","isInArray","inRange","isBetween","removeGame","clickToSelect","hideSelectAll","onSelect","isSelect","rowIndex","updateSeason","readOnly","f_games","openModal","SeasonTable","deleteSeason","saveSeasonBD","addSeasonGame","gameId","removeSeasonGame","deleteSeasonBD","Season","setCurrentSeason","_addSeason","addSeasonInBD","bdSeason","Nav","logout","link","activeClassName","navigation","AppWrapper","loadUser","component","AllRoutes","exact","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89af25bf.chunk.js","sourcesContent":["const ImageUtils = {\r\n    validateImage: function(img) {\r\n        const fileTypes = \"jpeg|jpg|png|gif|svg\";\r\n        const fieldSize = 1024 * 1024;\r\n\r\n        if (!img) {\r\n            return \"Invalid Image.\";\r\n        }\r\n        else if (!img.name.match(/\\.(jpeg|jpg|png|gif|svg)$/)) {\r\n            return `Invalid Image extension! Must be (${fileTypes})`;\r\n        }\r\n        else if (!img.size > fieldSize) {\r\n           return `Image is to big! Max (${fieldSize}).`\r\n        }\r\n        \r\n        return null;\r\n    },\r\n    getImage: function(path) {\r\n        const server = process.env.REACT_APP_SERVER;//'http://localhost:5000';//TODO get from env\r\n        return `${server}/${path}`;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.ImageUtils = ImageUtils;","import axios from 'axios';\nimport {server_url} from './config';\n\nconst ServiceData = {\n    execute: async function(path, options) {\n        let baseUrl = server_url;//'http://localhost:5000/api/';\n    \n        let result = {};\n        try {\n            console.log(\"DB call: \", baseUrl, path, options);\n            await axios(baseUrl + path, options)\n            .then(response => { \n                if (response.data) {\n                    result.data = response.data;\n                }\n            })\n        } catch (error) {\n            console.log(error);\n            result.error = error.response.data;\n        }\n\n        return result;\n    },\n\n    gameExecute: async function(pathGame, pathChamp, pathTeam, options) {\n        let baseUrl = server_url;//'http://localhost:5000/api/';\n    \n        let result = {};\n        try {\n            await axios.all([\n                axios(baseUrl + pathGame, options),\n                axios(baseUrl + pathChamp, options),\n                axios(baseUrl + pathTeam, options)\n            ])\n            .then(axios.spread(function (games, champs, teams) {\n                result.games = games.data || [];\n                result.champs = champs.data || [];\n                result.teams = teams.data || [];\n              }))\n        } catch (error) {\n            console.log(error);\n            result.error = error.response.data;\n        }\n\n        return result;\n    },\n\n    seasonExecute: async function(pathSeason, pathGame, options) {\n        let baseUrl = server_url;//'http://localhost:5000/api/';\n    \n        let result = {};\n        try {\n            await axios.all([\n                axios(baseUrl + pathSeason, options),\n                axios(baseUrl + pathGame, options)\n            ])\n            .then(axios.spread(function (seasons, games) {\n                result.seasons = seasons.data || [];\n                result.games = games.data || [];\n              }))\n        } catch (error) {\n            console.log(error);\n            result.error = error.response.data;\n        }\n\n        return result;\n    },\n\n    paymentExecute: async function(pathPayment, pathUser, options) {\n        let baseUrl = server_url;//'http://localhost:5000/api/';\n    \n        let result = {};\n        try {\n            await axios.all([\n                axios(baseUrl + pathPayment, options),\n                axios(baseUrl + pathUser, options)\n            ])\n            .then(axios.spread(function (payments, users) {\n                result.payments = payments.data || [];\n                result.users = users.data || [];\n              }))\n        } catch (error) {\n            console.log(error);\n            result.error = error.response.data;\n        }\n\n        return result;\n    },\n\n    homeExecute: async function(pathMe, pathSeason, pathStatus, options) {\n        let baseUrl = server_url;//'http://localhost:5000/api/';\n        \n        let result = {};\n        try {\n            await axios.all([\n                axios(baseUrl + pathMe, options),\n                axios(baseUrl + pathSeason, options),\n                axios(baseUrl + pathStatus, options)\n            ])\n            .then(axios.spread(function (me, seasons, status) {\n                result.me = me.data || '';\n                result.seasons = seasons.data || [];\n                result.status = status.data || [];\n              }))\n        } catch (error) {\n            console.log(error);\n            result.error = error.response.data;\n        }\n\n        return result;\n    },\n\n    normalUserExecute: async function(pathMe, pathSeason, pathStatus, options) {\n        let baseUrl = server_url;//'http://localhost:5000/api/';\n        \n        let result = {};\n        try {\n            await axios.all([\n                axios(baseUrl + pathMe, options),\n                axios(baseUrl + pathSeason, options),\n                axios(baseUrl + pathStatus, options)\n            ])\n            .then(axios.spread(function (me, seasons, status) {\n                result.me = me.data || '';\n                result.seasons = seasons.data || [];\n                result.status = status.data || [];\n              }))\n        } catch (error) {\n            console.log(error);\n            result.error = error.response.data;\n        }\n\n        return result;\n    },\n\n    options: function(method, userData, headers) {\n        const options = {};\n\n        options.method = method;\n        if (userData)\n            options.data = userData;\n        \n        if (headers) \n            options.headers = headers;\n        \n        return options;\n    },\n\n    headers: function(token, file) {\n        let headers = {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n        }\n\n        if (token) {\n            headers = {\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json',\n                'x-auth-token': token\n            }\n        }\n\n        if (file) {\n            headers = {\n                'Access-Control-Allow-Origin': '*',\n                'x-auth-token': token,\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        return headers;\n    }\n}\n\nexport default ServiceData;","import React from \"react\";\nimport loginImg from \"../../img/slbLogo.jpg\";\nimport ServiceData from \"../../service/dataUtils\";\nimport {Redirect} from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nconst passwordRegex = RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{5,}$/);\n\nconst valid = ({errors, ...rest}) => {\n    let valid = true;\n\n    // validate form errors being empty\n    Object.values(errors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n      val === null && (valid = false);\n    });\n\n    return valid;\n}\n\nexport class Register extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: null,\n      email: null,\n      password: null,\n      isLogged: false,\n      showPassword: false,\n      errors : {\n        name: '',\n        email: '',\n        password: ''\n      },\n      submitError : ''\n    }\n  }\n\n  onChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let errors = { ...this.state.errors};\n\n    switch (name) {\n      case \"name\":\n        errors.name = value.length < 3 ? \"'Name' minimum 3 characters required\" : \"\";\n        break;\n      case \"email\":\n        errors.email = emailRegex.test(value) ? \"\" : \"'Email' invalid email address\";\n        break;\n      case \"password\":\n        errors.password = passwordRegex.test(value) ? \"\" : \"Password' must have 5 characters, contain 1 uppercase, 1 lowercase and 1 digit!\"\n        break;\n      default:\n        break;\n    }\n    \n    this.setState({errors, [name]: value});\n  }\n\n  togglePassword = () => {\n    const showPassword = this.state.showPassword;\n    this.setState({showPassword: !showPassword})\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    if (valid(this.state)) {\n      const {name, email, password} = this.state;\n      \n      const userData = {\n        name: name,\n        email: email,\n        password: password,\n        isAdmin: false\n      }\n\n      const headers = ServiceData.headers();\n      const options = ServiceData.options('POST', userData, headers);\n      const result = await ServiceData.execute('users', options);\n      \n      const {data, error} = result;\n      if (data) {\n        sessionStorage.setItem('token', data.token);\n        this.setState({isLogged: true});\n      }\n\n      if (error) {\n        this.setState({submitError: error});\n      }\n    }\n    else {\n      console.log('Error submit');\n      this.setState({submitError: 'Fill data!'});\n    }\n  }\n\n  render() {\n    const { errors, submitError, isLogged, showPassword } = this.state;\n    const iconName = showPassword ? \"eye\" : \"eye-slash\";\n\n    if (isLogged) {\n      return (<Redirect to={'/home'}/>);\n    }\n\n    if (sessionStorage.getItem('token')) {\n      return (<Redirect to={'/home'}/>);\n    }\n\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Register</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} alt=\"\" />\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" placeholder=\"name\" onChange={this.onChange}/>\n              <span className=\"errorMessage\">{errors.name.length > 0 ? errors.name : ''}</span>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" name=\"email\" placeholder=\"email\" onChange={this.onChange}/>\n              <span className=\"errorMessage\">{errors.email.length > 0 ? errors.email : ''}</span>\n            </div>\n            <div className=\"form-group\">\n              <div className=\"form-password\" style={{position: 'relative'}}>\n                <label style={{display: 'flex'}} htmlFor=\"password\">Password</label>\n                <input\n                  type={ showPassword? \"text\" : \"password\" } \n                  name=\"password\" \n                  placeholder=\"password\" \n                  onChange={this.onChange}\n                  autoComplete=\"on\"\n                />\n                <FontAwesome onClick={this.togglePassword}\n                  className=\"password-icon\"\n                  name={ iconName }\n                  style={{ \n                  position: 'absolute',\n                  right: '20px',\n                  bottom: '13px',\n                  cursor: 'pointer'\n                  }}\n                />\n              </div>\n              <span className=\"errorMessage\">{errors.password.length > 0 ? errors.password : ''}</span>\n            </div>\n            {submitError && submitError.length > 0 && (<span className=\"errorMessage\">{submitError}</span>)}\n          </div>\n        </div>\n        <div className=\"footer\">\n          <button type=\"button\" className=\"btn\" onClick={this.handleSubmit}>\n            Register\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","\nconst Storage = {\n    add: function(key, value) {\n        const v = value instanceof Object ? JSON.stringify(value) : value;\n        sessionStorage.setItem(key, v);\n    },\n    get: function(key) {\n        const item = sessionStorage.getItem(key);\n        if (item === null) return null;\n        \n        try {\n            return JSON.parse(item);\n\n          } catch (error) {\n                //console.log(error);\n                return item;\n          }\n    },\n    delete: function(key) {\n        sessionStorage.removeItem(key);\n    },\n    clear: function() {\n        sessionStorage.clear();\n    }\n}\n\nexport default Storage;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport loginImg from '../../img/slbLogo.jpg';\nimport ServiceData from \"../../service/dataUtils\";\nimport Storage  from '../../service/StorageData';\nimport { Redirect } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\n\nconst inputStyle = {\n  marginTop: '10px',\n  marginBottom: '15px'\n};\n\nconst groupStyle = {\n  marginTop: '1em'\n};\n\nconst navStyle = {\n  marginBottom: '25px',\n  display: 'flex'\n}\n\nexport class Signin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      password: null,\n      showPassword: false,\n      isLogged: false,\n      error : null\n    }\n  }\n\n  togglePassword = () => {\n    const showPassword = this.state.showPassword;\n    this.setState({showPassword: !showPassword})\n  }\n\n  loadData = async (userData) => {\n    const headers = ServiceData.headers();\n    const options = ServiceData.options('POST', userData, headers);\n\n    return await ServiceData.execute('auth', options);\n  }\n\n  login = () => {\n    const {email, password} = this.state;\n    if ( email && password) {\n      const userData = { email: email, password: password};\n      this.loadData(userData)\n        .then((data) => {\n            if (data.data) {\n              Storage.add('token', data.data);\n              this.setState({isLogged: true});\n            }\n            if (data.error) {\n              this.setState({error: data.error});\n            }\n      }).catch(err => {\n          console.log(\"Err\", err);\n          this.setState({error: err});\n      })\n    }\n    else {\n      console.log(\"Error email and password required!\");\n      this.setState({error: 'Error email and password required!'});\n    }\n\n  }\n\n  onChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n    const {error, isLogged, showPassword} = this.state;\n    const iconName = showPassword ? \"eye\" : \"eye-slash\";\n\n    if (isLogged) {\n      return (<Redirect to={'/home'}/>);\n    }\n\n    if (Storage.get('token')) {\n      return (<Redirect to={'/home'}/>);\n    }\n\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Login</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} alt=\"\" />\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\" style={groupStyle}>\n              <label htmlFor=\"email\">Email</label>\n              <input style={inputStyle} type=\"email\" name=\"email\" placeholder=\"email\" onChange={this.onChange}/>\n            </div>\n            <div className=\"form-group\" style={groupStyle}>\n              <div className=\"form-password\" style={{position: 'relative'}}>\n                <label style={{display: 'flex'}} htmlFor=\"password\">Password</label>\n                <input \n                  style={inputStyle} \n                  type={ showPassword? \"text\" : \"password\" } \n                  name=\"password\" \n                  placeholder=\"password\" \n                  onChange={this.onChange}\n                  autoComplete=\"on\"\n                />\n                <FontAwesome onClick={this.togglePassword}\n                  className=\"password-icon\"\n                  name={ iconName }\n                  style={{ \n                    position: 'absolute',\n                    right: '20px',\n                    bottom: '23px',\n                    cursor: 'pointer'\n                  }}\n                />\n              </div>\n            </div>\n            {error && error.length > 0 && (<span className=\"errorMessage\">{error}</span>)}\n          </div>\n        </div>\n        <div className=\"footer\">\n          <NavLink style={navStyle} to='/forgot'>Forgot Password?</NavLink>\n          <button type=\"button\" className=\"btn\" onClick={this.login}>\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Login.scss';\nimport './style.scss';\nimport {Register} from './register';\nimport {Signin} from './signin';\n\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n\n  componentDidMount() {\n    //Add .right by default\n    this.rightSide.classList.add(\"right\");\n  }\n\n  changeState() {\n    const { isLogginActive } = this.state;\n\n    if (isLogginActive) {\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n  render() {\n    const { isLogginActive } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    const currentActive = isLogginActive ? \"login\" : \"register\";\n    return (\n      <div className=\"Login\">\n        <div className=\"login\">\n          <div className=\"login_container\" ref={ref => (this.container = ref)}>\n            {isLogginActive && (\n              <Signin containerRef={ref => (this.current = ref)} />\n            )}\n            {!isLogginActive && (\n              <Register containerRef={ref => (this.current = ref)} />\n            )}\n          </div>\n          <RightSide\n            current={current}\n            currentActive={currentActive}\n            containerRef={ref => (this.rightSide = ref)}\n            onClick={this.changeState.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst RightSide = props => {\n  return (\n    <div\n      className=\"right-side\"\n      ref={props.containerRef}\n      onClick={props.onClick}\n    >\n      <div className=\"inner-container\">\n        <div className=\"text\">{props.current}</div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport loginImg from '../../img/slbLogo.jpg'\nimport './Login.scss';\nimport './style.scss';\nimport { NavLink } from 'react-router-dom';\nimport ServiceData from '../../service/dataUtils';\nimport { Redirect } from 'react-router-dom';\n\nconst inputStyle = {\n  marginTop: '15px',\n  marginBottom: '20px'\n};\n\nconst groupStyle = {\n  marginTop: '2em'\n};\n\nconst navStyle = {\n  marginTop: '15px'\n};\n\n\nexport class Forgot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      redirect: false,\n      toLogin: false,\n      error: null,\n      success: null\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  loadData = async (userData) => {\n    const headers = ServiceData.headers();\n    const options = ServiceData.options('PUT', userData, headers);\n\n    return await ServiceData.execute('forgot/get', options);\n  }\n\n  toLogin = (e) => {\n    this.setState({redirect: !this.state.redirect});\n  }\n\n  sendEmail = () => {\n    const {email} = this.state;\n    if ( email) {\n      const userData = { email: email};\n      this.loadData(userData)\n      .then((data) => {\n          if (data.data) {\n            this.setState({success: data.data, toLogin: true});\n          }\n          if (data.error) {\n            this.setState({error: data.error});\n          }\n      }).catch(err => {\n          console.log(\"Err\", err);\n          this.setState({error: err});\n      })\n    }\n    else {\n      console.log(\"Error email required!\");\n      this.setState({error: 'Error email required!'});\n    }\n\n  }\n\n  render() {\n    const {error, success, redirect, toLogin} = this.state;\n    if (redirect)\n      return (<Redirect to={'/login'}/>);\n\n    return (\n      <div className=\"Login\">\n        <div className=\"login\">\n         <div className=\"login_container\">\n            <div className=\"base-container\" ref={this.props.containerRef}>\n              <div className=\"header\">Forgot</div>\n              <div className=\"content\">\n                <div className=\"image\">\n                  <img src={loginImg} alt=\"\" />\n                </div>\n                <div className=\"form\">\n                  <div className=\"form-group\" style={groupStyle}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input style={inputStyle} type=\"email\" name=\"email\" placeholder=\"email\" onChange={this.onChange}/>\n                  </div>\n                  {error && error.length > 0 && (<span className=\"errorMessage\">{error}</span>)}\n                  {success && success.length > 0 && (<span className=\"successMessage\">{success}</span>)}\n                </div>\n                <NavLink style={navStyle} to='/login'>to Login</NavLink>\n                {toLogin && (\n                  <button type=\"button\" className=\"btn\" style={groupStyle} onClick={this.toLogin}>\n                    Go to Login\n                  </button>\n                )}\n                {!toLogin && (\n                  <button type=\"button\" className=\"btn\" style={groupStyle} onClick={this.sendEmail}>\n                    Send\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport loginImg from '../../img/slbLogo.jpg'\nimport './Login.scss';\nimport './style.scss';\nimport ServiceData from \"../../service/dataUtils\";\nimport Storage from '../../service/StorageData';\nimport { Redirect } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport moment from 'moment';\nconst jwt = require('jsonwebtoken');\n\nconst passwordRegex = RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{5,}$/);\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nconst inputStyle = {\n  marginTop: '10px',\n  marginBottom: '15px'\n};\n\nconst groupStyle = {\n  marginTop: '1em'\n};\n\nconst valid = ({errors, ...rest}) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(errors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  \n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n}\n\nexport class Reset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      password: null,\n      isLogged: false,\n      redirect: false,\n      showPassword: false,\n      errors : {\n        email: '',\n        password: ''\n      },\n      error: null,\n      token: props.match.params.token\n    }\n  }\n\n  componentDidMount() {\n    const token = this.state.token;\n    const decoded = jwt.verify(token, 'pizziUmaMerda');\n    const endDate = moment(decoded.exp);\n    const now = moment(new Date());\n    const diff = endDate.diff(now);\n    const diffDuration = moment.duration(diff)\n    console.log(\"Diff\", diffDuration.minutes());\n    if (diffDuration.minutes() > 0) {\n      this.setState({email: decoded.email});\n    }\n    else {\n      this.setState({redirect: true});\n    }\n   \n  }\n\n  onChange = (e) => {\n    e.preventDefault();\n    let errors = { ...this.state.errors};\n    const { name, value } = e.target;\n    if (name === 'password') {\n      errors.password = passwordRegex.test(value) ? \"\" : \"Password' must have 5 characters, contain 1 uppercase, 1 lowercase and 1 digit!\";\n    }\n    if (name === 'email') {\n      errors.email = emailRegex.test(value) ? \"\" : \"'Email' invalid email address\";\n    }\n\n    this.setState({errors, error: '', [name]: value});\n  }\n\n  togglePassword = () => {\n    const showPassword = this.state.showPassword;\n    this.setState({showPassword: !showPassword})\n  }\n\n  loadData = async (userData) => {\n    const headers = ServiceData.headers();\n    const options = ServiceData.options('POST', userData, headers);\n\n    return await ServiceData.execute('forgot/reset', options);\n  }\n\n  reset = (e) => {\n    e.preventDefault();\n    if (valid(this.state)) {\n      const {email, password} = this.state;\n      const userData = { email: email, password: password};\n      this.loadData(userData)\n      .then((data) => {\n          if (data.data) {\n            Storage.add('token', data.data);\n            this.setState({isLogged: true});\n          }\n          if (data.error) {\n            this.setState({error: data.error});\n          }\n      }).catch(err => {\n          console.log(\"Err\", err);\n          this.setState({error: err});\n      })\n\n    } else {\n      console.log(\"Error email and password required!\");\n      this.setState({error: 'Error email and password required!'});\n    }\n\n  }\n\n  render() {\n    const {email, showPassword, errors, error, redirect, isLogged} = this.state;\n    const iconName = showPassword ? \"eye\" : \"eye-slash\";\n    if (isLogged)\n      return (<Redirect to={'/home'}/>);\n    \n    if (redirect)\n      return (<Redirect to={'/forgot'}/>);\n\n    return (\n      <div className=\"Login\">\n        <div className=\"login\">\n         <div className=\"login_container\">\n            <div className=\"base-container\">\n              <div className=\"header\">Reset</div>\n              <div className=\"content\">\n                <div className=\"image\">\n                  <img src={loginImg} alt=\"\" />\n                </div>\n                <div className=\"form\">\n                  <div className=\"form-group\" style={groupStyle}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input style={inputStyle} type=\"email\" name=\"email\" value={email ? email : ''} onChange={this.onChange}/>\n                    <span className=\"errorMessage\">{errors.email.length > 0 ? errors.email : ''}</span>\n                  </div>\n                  <div className=\"form-group\" style={groupStyle}>\n                    <div className=\"form-password\" style={{position: 'relative'}}>\n                      <label style={{display: 'flex'}} htmlFor=\"password\">Password</label>\n                      <input \n                        style={inputStyle} \n                        type={ showPassword? \"text\" : \"password\" } \n                        name=\"password\" \n                        placeholder=\"password\" \n                        onChange={this.onChange}\n                        autoComplete=\"on\"\n                      />\n                      <FontAwesome onClick={this.togglePassword}\n                        className=\"password-icon\"\n                        name={ iconName }\n                        style={{ \n                          position: 'absolute',\n                          right: '20px',\n                          bottom: '23px',\n                          cursor: 'pointer'\n                        }}\n                      />\n                    </div>\n                    <span className=\"errorMessage\">{errors.password.length > 0 ? errors.password : ''}</span>\n                  </div>\n                  {error && error.length > 0 && (<span className=\"errorMessage\">{error}</span>)}\n                </div>\n              </div>\n              <div className=\"footer\">\n                <button type=\"button\" className=\"btn\" onClick={this.reset}>\n                  Reset Password\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react'  \r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst ReactTable = props => {\r\n    const [ data, setData ] = useState(props.listData);\r\n    const [ maxRows, setMaxRows ] = useState(props.maxRows || 5);\r\n  \r\n    useEffect(\r\n      () => {\r\n        setData(props.listData);\r\n        setMaxRows(props.maxRows || 5);\r\n      },\r\n      [ props ]\r\n    );\r\n    \r\n    const customTotal = (from, to, size) => (\r\n          <span className=\"react-bootstrap-table-pagination-total\">\r\n            Showing { from } to { to } of { size } Results\r\n          </span>\r\n    );\r\n\r\n    const handleDataChange = (value) => {\r\n        console.log(\"Size\", value);\r\n    }\r\n        \r\n    const options = {\r\n        paginationSize: maxRows,\r\n        pageStartIndex: 1,\r\n        // alwaysShowAllBtns: true, // Always show next and previous button\r\n        // withFirstAndLast: false, // Hide the going to First and Last page button\r\n        hideSizePerPage: true, // Hide the sizePerPage dropdown always\r\n        hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\r\n        firstPageText: 'First',\r\n        prePageText: 'Back',\r\n        nextPageText: 'Next',\r\n        lastPageText: 'Last',\r\n        nextPageTitle: 'First page',\r\n        prePageTitle: 'Pre page',\r\n        firstPageTitle: 'Next page',\r\n        lastPageTitle: 'Last page',\r\n        showTotal: true,\r\n        paginationTotalRenderer: customTotal,\r\n        disablePageTitle: true,\r\n        sizePerPageList: [{ text: maxRows, value: maxRows }]\r\n    };\r\n    \r\n    return(\r\n        <ToolkitProvider\r\n            keyField='_id'\r\n            data={ data } \r\n            columns={ props.columns }\r\n            search\r\n        >\r\n            {\r\n                _props => (\r\n                    <div>\r\n                        <SearchBar tableId={props.searchID} { ..._props.searchProps } />\r\n                        <BootstrapTable\r\n                            { ..._props.baseProps }\r\n                            pagination={ paginationFactory(options) }\r\n                            noDataIndication=\"No data\"\r\n                            defaultSorted={ props.defaultSorted }\r\n                            headerWrapperClasses=\"tableHeader\"\r\n                            bodyClasses=\"tableBody\"\r\n                            wrapperClasses=\"tableContainer\"\r\n                            selectRow={props.selectRow}\r\n                            onDataSizeChange={ handleDataChange }\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        </ToolkitProvider>\r\n    );\r\n}\r\n\r\nexport default ReactTable;","import React, { useState, useEffect } from 'react';\r\nimport './selectSearch.scss';\r\nimport SelectSearch from 'react-select-search';\r\n\r\nconst Select = (props) => {\r\n    const [ value, setValue ] = useState(props.value);\r\n\r\n    useEffect(() => {\r\n        setValue(props.value);\r\n    }, [props])\r\n\r\n    const onChange = value => {\r\n        setValue(value);\r\n        props.onChange(value);\r\n    }\r\n\r\n    return (\r\n        <SelectSearch\r\n            options={props.options}\r\n            search\r\n            placeholder={props.hint}\r\n            onChange={onChange}\r\n            value={value || null}\r\n        />)\r\n}\r\n\r\nexport default Select;","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport ServiceData from \"../../../service/dataUtils\";\nimport Storage from \"../../../service/StorageData\";\nimport moment from 'moment';\nimport './home.scss';\nimport ReactTable from '../../custom/bootstraptab';\nimport {ImageUtils} from '../../../service/utils';\nimport Select from '../../custom/selectSearch';\n\nexport class Home extends React.Component {\n    _isMounted = false;\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n          isLogged: true,\n          user: '',\n          seasons: [],\n          mapSeasons: [],\n          games: [],\n          status: [],\n          currentSeason: null,\n          selectedSeason: null\n        }\n    }\n\n    fillState = async (data, seasonId) => {\n        \n        if (data.me) {\n            const user = data.me;\n            this.setState({\n                user: user\n            });\n            Storage.add('cUser', user);\n        }\n        if (data.seasons) {\n            const size = data.seasons.length;\n            const dbSeasons = data.seasons;\n            let currentSeason = {};\n            if (seasonId) {\n                const current = dbSeasons.filter(function(s){return s._id === seasonId});\n                currentSeason = current[0];\n            } \n            else {\n                currentSeason = dbSeasons[size === 0 ? size : size - 1];\n            }\n            let seasonApi = dbSeasons.map(season => {\n                return {value: season._id, name: season.name}\n            });\n            this.setState({\n                seasons: dbSeasons,\n                mapSeasons: seasonApi,\n                currentSeason: currentSeason,\n                selectedSeason: currentSeason._id,\n                games: currentSeason.games\n            })\n        }\n        if (data.status) {\n            const mapStatus = data.status.map(status => {\n                return {_id: status.user, user: status.user, goals: status.goals, pay: status.pay, nPay: status.nPay}\n            });\n            this.setState({\n                status: mapStatus\n            })\n        }\n        if (data.error) {\n            console.log(\"Error: \", data.error);\n        }\n    }\n\n    onChangeSeason = (value) => {\n        const token = Storage.get('token');\n        getData(token, value)\n        .then((data) => {\n            this.fillState(data, value);\n        })\n        .catch(err => {\n           console.log('Error', err); \n        });\n\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        const token = Storage.get('token');\n        \n        if (token) {\n            getCurrentData(token)\n                .then((data) => {\n                    if (this._isMounted)\n                        this.fillState(data);\n                })\n                .catch(err => {\n                console.log('Error', err); \n                });\n        }\n        else {\n            this.setState({isLogged: false});\n        }\n        \n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        const {isLogged, games, status, mapSeasons, selectedSeason, currentSeason} = this.state;\n       \n        if (!isLogged) {\n            return (<Redirect to={'/login'}/>);\n        }\n          \n          return (\n            <div className=\"home_container\">\n                <div className=\"flex-item\">\n                    <div className=\"flex_from\">\n                        <div className=\"flex_form-group\" >\n                            <div className=\"season_group\">\n                                <label className=\"flex_label\" htmlFor=\"SeasonId\">Season</label>\n                                <Select \n                                    name=\"seasonId\" \n                                    options={mapSeasons} \n                                    hint=\"select season\" \n                                    onChange={this.onChangeSeason}\n                                    value={selectedSeason}\n                                />\n                            </div>\n                            <div className=\"goals_group\">\n                                <div className=\"season_goals\">\n                                    <label className=\"flex_label\">Total Goals\n                                        <span className=\"goals\">{currentSeason != null ? currentSeason.goals : 0}</span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <GameTable games={games} searchID={'game'} />\n                </div>\n                <div className=\"fixed\">\n                    <StatusTable status={status}/>\n                </div>\n            </div>\n          );\n    }\n}\n\nconst StatusTable = (props) => {\n    const columns = [\n        { dataField: 'key', text: 'Key', hidden: true},\n        { dataField: 'user', text: 'User', sort: true, headerAlign: 'center', \n            footerAlign: (column, colIndex) => 'left',\n            footer: 'Total'\n        },\n        { dataField: 'pay', text: 'Pay', sort: true, headerAlign: 'center',\n            formatter: (cell, row) => {\n                return (<div className=\"score-box\">\n                            {row.pay}\n                        </div>);\n            },\n            footer: columnData => columnData.reduce((acc, item) => acc + item, 0)\n        },\n        { dataField: 'nPay', text: 'Not Pay', sort: true, headerAlign: 'center',\n            formatter: (cell, row) => {\n                return (<div className=\"score-box\">\n                            {row.nPay}\n                        </div>);\n            },\n            footer: columnData => columnData.reduce((acc, item) => acc + item, 0)\n        }\n    ];\n\n    const defaultSorted = [{dataField: 'date', order: 'desc' }];\n\n    return(<ReactTable listData={props.status} columns={columns} defaultSorted={defaultSorted} maxRows={4} searchID={'status'} />);\n}\n\nconst GameTable = (props) => {\n\n    const columns = [\n        { dataField: '_id', text: 'ID', hidden: true }, \n        { dataField: 'name', text: 'Name', sort: true, headerAlign: 'center' },\n        { dataField: 'date', text: 'Date', sort: true, headerAlign: 'center', \n          formatter: (cell, row) => {\n            return (\n                <div style={{textAlign:\"center\"}}className=\"date-center\">\n                    {`${moment(row.date).format(\"DD-MM-YYYY\")? moment(row.date).format(\"DD-MM-YYYY\"):moment(row.date).format(\"DD-MM-YYYY\") }`}\n                </div>\n            );\n          }\n        },\n        { dataField: 'championship._id', text: 'CH_ID', hidden: true},\n        { dataField: 'championship.name', text: 'Championship', sort: true, headerAlign: 'center'},\n        { dataField: 'homeTeam._id', text: 'HOME_ID', hidden: true},\n        { dataField: 'homeTeam.logo', text: 'Home', headerAlign: 'center',\n          formatter: (cell, row) => {\n            return (\n            <div className=\"logo\">\n                {row.homeTeam.logo && ( <img src={ImageUtils.getImage(row.homeTeam.logo)} alt=\"\"/> )}\n            </div>)\n          } \n        },\n        { dataField: 'awayTeam._id', text: 'AWAY_ID', hidden: true},\n        { dataField: 'awayTeam.logo', text: 'Away', headerAlign: 'center',\n          formatter: (cell, row) => {\n            return (\n            <div className=\"logo\">\n                {row.awayTeam.logo && ( <img src={ImageUtils.getImage(row.awayTeam.logo)} alt=\"\"/> )}\n            </div>)\n          } \n        }, \n        { dataField: 'score', text: 'Score', isDummyField: true,\n          formatter: (cell, row) => {\n              return (<div style={{textAlign:\"center\"}} className=\"score-board\">\n                        <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"team\">\n                            <div className=\"score-box\">\n                                {row.homeGoals}\n                            </div>\n                        </div>\n                        <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"separator\">-</div>\n                        <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"team\">\n                            <div className=\"score-box\">\n                                {row.awayGoals}\n                            </div>\n                        </div>\n                    </div>\n            )}\n        }\n    ];\n      \n    const defaultSorted = [{dataField: 'date', order: 'desc' }];\n\n    return(<ReactTable listData={props.games} columns={columns} defaultSorted={defaultSorted} maxRows={4} searchID={'game'}/>);\n}\n\nasync function getCurrentData(token) {\n    let result = {}\n\n    const headers = ServiceData.headers(token);\n    const options = ServiceData.options('GET', null, headers);\n\n    await ServiceData.execute('seasons/current', options)\n    .then(async (data) => {\n        const seasonId = data.data._id;\n        const statusPath = `status/${seasonId}`;\n        result.seasonId = seasonId;\n\n        await ServiceData.homeExecute('users/me', 'seasons', statusPath, options)\n        .then((res) => {\n            result.me = res.me;\n            result.seasons = res.seasons;\n            result.status = res.status;\n        })\n        .catch(err => {\n            result.error = err;\n        })\n    })\n    .catch(err => {\n        result.error = err;\n    });\n\n    return result;\n}\n\nasync function getData(token, seasonId) {\n    let result = {}\n\n    const headers = ServiceData.headers(token);\n    const options = ServiceData.options('GET', null, headers);\n\n    const statusPath = `status/${seasonId}`;\n    result.seasonId = seasonId;\n\n        await ServiceData.homeExecute('users/me', 'seasons', statusPath, options)\n        .then((res) => {\n            result.me = res.me;\n            result.seasons = res.seasons;\n            result.status = res.status;\n        })\n        .catch(err => {\n            result.error = err;\n        })\n    \n    return result;\n}","import React, { useState } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport Joi from 'joi';\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nconst AddUser = props => {\r\n\tconst initialState = { _id: null, name: '', email: '', isAdmin: false, password: '' };\r\n    const [ user, setUser ] = useState(initialState);\r\n    const [ showPassword, setShowPassword ] = useState(false);\r\n    const [ error, setError ] = useState(null);\r\n\r\n\tconst handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        let _value = value;\r\n        if (name === 'isAdmin') {\r\n            _value = event.target.checked;\r\n        }\r\n        \r\n\t\tsetUser({ ...user, [name]: _value })\r\n    }\r\n    \r\n    const togglePassword = e => {\r\n        setShowPassword(!showPassword);\r\n    }\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={event => {\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tif (!user.name || !user.email) {\r\n                    setError(\"Error: Fill Name and Email.\");\r\n                } \r\n                else {\r\n                    const { error } = validateUser(user);\r\n                    if (error) {\r\n                        setError(error.details[0].message);\r\n                    }\r\n                    else {\r\n                        props.addUser(user)\r\n                        setUser(initialState)\r\n                    }\r\n                }\r\n\t\t\t}}\r\n\t\t>\r\n            <div className=\"form\">\r\n                <div className=\"form-group\" >\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange}/>\r\n                </div>\r\n                <div className=\"form-group\" >\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"text\" name=\"email\" value={user.email} onChange={handleInputChange}/>\r\n                </div>\r\n                <div className=\"form-group-checkbox\" >\r\n                    <label className=\"checkbox-inline\">Admin</label>\r\n                    <label className=\"customCheckbox\">\r\n                        <input type=\"checkbox\" name=\"isAdmin\" value={user.isAdmin} onChange={handleInputChange}/>\r\n                        <span></span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group\" >\r\n                    <div className=\"form-password\" style={{position: 'relative'}}>\r\n                        <label style={{display: 'flex'}} htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type={ showPassword? \"text\" : \"password\" } \r\n                            name=\"password\" \r\n                            value={user.password} \r\n                            onChange={handleInputChange}\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        <FontAwesome onClick={togglePassword}\r\n                            className=\"password-icon\"\r\n                            name={ showPassword ? \"eye\" : \"eye-slash\" }\r\n                            style={{ \r\n                                position: 'absolute',\r\n                                right: '20px',\r\n                                bottom: '13px',\r\n                                cursor: 'pointer'\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"button-joiner\">\r\n                    <button>Add</button>\r\n                </div>\r\n                {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n            </div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nfunction validateUser(user) {\r\n    const schema = {\r\n        _id: Joi.string().allow(null).allow(''),\r\n        name: Joi.string().min(3).max(50).required(),\r\n        email: Joi.string().min(5).max(255).required().email(),\r\n        password: Joi.string()\r\n            .min(5)\r\n            .required()\r\n            .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{5,}$/)\r\n            .error(() => {\r\n                return {\r\n                  message: \"'Password' must have 5 characters, contain 1 uppercase, 1 lowercase and 1 digit!\",\r\n                };\r\n              }),\r\n        isAdmin: Joi.boolean()\r\n    };\r\n    \r\n    return Joi.validate(user, schema);\r\n}\r\n\r\nexport default AddUser","import React, { useState, useEffect } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nconst EditUser = props => {\r\n  const [ user, setUser ] = useState(props.currentUser);\r\n  const [ showPassword, setShowPassword ] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      setUser(props.currentUser);\r\n    },\r\n    [ props ]\r\n  );\r\n  \r\n  const togglePassword = e => {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    let _value = value;\r\n    if (name === 'isAdmin') {\r\n        _value = e.target.checked;\r\n    }\r\n    setUser({ ...user, [name]: _value })\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    if (props.isAdmin) {\r\n      props.updateUser(user._id, user);\r\n    }\r\n    else \r\n      props.updateUser(user);\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    props.setEditing(false);\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    props.cancelNonAdminEdit();\r\n  }\r\n\r\n  return (\r\n    \r\n      <div className=\"form\">\r\n          <div className=\"form-group\" >\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input type=\"name\" name=\"name\" value={user ? user.name : ''} onChange={handleInputChange}/>\r\n          </div>\r\n          <div className=\"form-group\" >\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" name=\"email\" value={user ? user.email : ''} onChange={handleInputChange}/>\r\n          </div>\r\n          {props.isAdmin && (\r\n            <div className=\"form-group-checkbox\" >\r\n                  <label className=\"checkbox-inline\">Admin</label>\r\n                  <label className=\"customCheckbox\">\r\n                      <input type=\"checkbox\" name=\"isAdmin\" checked={user.isAdmin} onChange={handleInputChange} />\r\n                      <span></span>\r\n                  </label>\r\n              </div>\r\n            )}\r\n          <div className=\"form-group\" >\r\n              <div className=\"form-password\" style={{position: 'relative'}}>\r\n                  <label style={{display: 'flex'}} htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type={ showPassword? \"text\" : \"password\" } \r\n                    name=\"password\" \r\n                    value={user && user.password ? user.password : ''} \r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <FontAwesome onClick={togglePassword}\r\n                    className=\"password-icon\"\r\n                    name={ showPassword ? \"eye\" : \"eye-slash\" }\r\n                    style={{ \r\n                      position: 'absolute',\r\n                      right: '20px',\r\n                      bottom: '13px',\r\n                      cursor: 'pointer'\r\n                    }}\r\n                  />\r\n              </div>\r\n          </div>\r\n          <div className=\"button-joiner\">\r\n            <button onClick={handleUpdate}>Update</button>\r\n            {props.isAdmin && (\r\n              <button onClick={handleEdit} className=\"button muted-button\">\r\n                Cancel\r\n              </button>\r\n            )}\r\n            {!props.isAdmin && (\r\n              <button onClick={handleCancel} className=\"button muted-button\">\r\n                Cancel Edit\r\n              </button>\r\n            )}\r\n          </div>\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default EditUser","import React from 'react';\r\nimport ReactTable from '../../custom/bootstraptab';\r\n\r\nconst UserTable = props => {\r\n\r\n    const editRow = (user) => {\r\n        props.editRow(user);\r\n    }\r\n\r\n    const deleteRow = (id) => {\r\n        props.deleteUser(id);\r\n    }\r\n\r\n    const columns = [\r\n        { dataField: '_id', text: 'ID', hidden: true }, \r\n        { dataField: 'name', text: 'Name', sort: true, headerAlign: 'center' }, \r\n        { dataField: 'email', text: 'Email', sort: true, headerAlign: 'center' }, \r\n        { dataField: 'password', text: 'Password', hidden: true }, \r\n        { dataField: 'actions', text: 'Actions', isDummyField: true,\r\n          formatter: (cell, row ) => {\r\n              return ( \r\n                  <div className=\"button-joiner\">\r\n                      <button\r\n                          onClick={() => {\r\n                              editRow(row);\r\n                          }}\r\n                          className=\"button\"\r\n                      >\r\n                          Edit\r\n                      </button>\r\n                      <button\r\n                          onClick={() => {\r\n                              deleteRow(row._id);\r\n                          }}\r\n                          className=\"button muted-button\"\r\n                      >\r\n                          Delete\r\n                      </button>\r\n                  </div>\r\n              );\r\n          },\r\n          headerAlign: 'center'}\r\n    ];\r\n      \r\n    const defaultSorted = [{dataField: 'name', order: 'asc' }];\r\n\r\n    return(<ReactTable listData={props.users} columns={columns} defaultSorted={defaultSorted} searchID={'user'} />);\r\n}\r\n\r\nexport default UserTable;","import React from 'react';\r\nimport ReactTable from '../../custom/bootstraptab';\r\nimport moment from 'moment';\r\n\r\nconst StatusTable = props => {\r\n\r\n    const columns = [\r\n        { dataField: '_id', text: 'ID', hidden: true }, \r\n        { dataField: 'date', text: 'Date', sort: true, headerAlign: 'center', \r\n          formatter: (cell, row) => {\r\n            return (\r\n                <div style={{textAlign:\"center\"}}className=\"date-center\">\r\n                    {`${moment(row.date).format(\"DD-MM-YYYY\")? moment(row.date).format(\"DD-MM-YYYY\"):moment(row.date).format(\"DD-MM-YYYY\") }`}\r\n                </div>\r\n            );\r\n          }\r\n        },\r\n        { dataField: 'total', text: 'Amount', sort: true, headerAlign: 'center',\r\n            formatter: (cell, row) => {\r\n            return (\r\n            <div style={{textAlign:\"center\"}}>\r\n                <div style={{display:\"inline-block\", padding: \"2px\"}}>\r\n                <div className=\"score-box\">\r\n                        {row.total}\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        } \r\n      } \r\n         \r\n    ];\r\n      \r\n    const defaultSorted = [{dataField: 'date', order: 'asc' }];\r\n\r\n    return(<ReactTable listData={props.status} columns={columns} defaultSorted={defaultSorted} maxRows={5} searchID={'status'}/>);\r\n}\r\n\r\nexport default StatusTable;","import React, { useState, useEffect, Fragment }  from 'react';\nimport AddUser from '../userComponents/addUser';\nimport EditUser from '../userComponents/editUser';\nimport UserTable from \"../userComponents/userTable\";\nimport StatusTable from \"../userComponents/statusTable\";\nimport ServiceData from \"../../../service/dataUtils\";\nimport Select from '../../custom/selectSearch';\nimport Storage from \"../../../service/StorageData\";\nimport './user.scss';\nimport _ from 'lodash';\n\nconst User = (admin) => {\n\n\tconst [ error, setError ] = useState(null);\n\tconst [ users, setUsers ] = useState([]);\n\tconst [ status, setStatus ] = useState([]);\n\tconst [ seasons, setSeasons ] = useState([]);\n\tconst [ selectedSeason, setSelectedSeason ] = useState([]);\n\tconst [ currentUser, setCurrentUser ] = useState({ _id: '', name: '', email: '', isAdmin: false, password: '' });\n\tconst [ editing, setEditing ] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\n\t\tconst token = Storage.get('token');\n\t\tif (token) {\n\t\t\tloadUsers(token, admin.admin)\n\t\t\t\t.then((data) => {\n\t\t\t\t\tif (mounted) {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tif (admin.admin)\n\t\t\t\t\t\t\t\tsetUsers( data.data );\n\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst user = data.me;\n\t\t\t\t\t\t\t\tuser.password = null;\n\t\t\t\t\t\t\t\tsetCurrentUser( user );\n\t\t\t\t\t\t\t\tif (data.seasons) {\n\t\t\t\t\t\t\t\t\tconst seasons = data.seasons;\n\t\t\t\t\t\t\t\t\tlet seasonApi = seasons.map(season => {\n\t\t\t\t\t\t\t\t\t\treturn {value: season._id, name: season.name}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst defaultValue = [{value: \"0\", name: '----'}];\n\t\t\t\t\t\t\t\t\tseasonApi = defaultValue.concat(seasonApi);\n\t\t\t\t\t\t\t\t\tsetSeasons(seasonApi);\n\t\t\t\t\t\t\t\t\tsetSelectedSeason(\"0\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (data.status) {\n\t\t\t\t\t\t\t\t\tlet statusApi = data.status;\n\t\t\t\t\t\t\t\t\tstatusApi.forEach((status, index) => status._id = index + 1);\n\n\t\t\t\t\t\t\t\t\tsetStatus(statusApi);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetError(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\t\tsetError( data.error );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(\"Error: \", err);\n\t\t\t\t})\n\t\t}\n\t\treturn () => {\n            mounted = false;\n        }\n\t}, [admin]);\n\n\n\t// CRUD operations\n\tconst _addUser = async (user) => {\n\t\tconst {error, data} = await addUserInBD(user);\n\t\tif (data) {\n\t\t\tsetUsers([ ...users, data.user ]);\n\t\t\tsetError(null); \n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n\t}\n\n\tconst addUserInBD = async (user) => {\n\t\tconst newUser = {\n\t\t\tname: user.name,\n\t\t\temail: user.email,\n\t\t\tpassword: user.password,\n\t\t\tisAdmin: user.isAdmin\n\t\t}\n\n\t\treturn await saveUserBD(newUser);\n\t}\n\n\tconst cancelNonAdminEdit = () => {\n\t\tconst cUser = Storage.get(\"cUser\");\n\t\tcUser.password = null;\n\t\t\n\t\tsetCurrentUser(cUser);\n\t}\n\n\tconst deleteUser = async (id) => {\n\t\tsetEditing(false);\n\t\t\n\t\tconst {error, data} = await deleteUserBD(id);\n\t\tif (data) {\n\t\t\tconst bdUser = data;\n\t\t\tsetUsers(users.filter(user => user._id !== bdUser._id));\n\t\t\tsetError(null);\n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n\t\t\n\t}\n\n\tconst _updateUser = async (user) => {\n\t\tif (!_.isEqual(user, currentUser)) {\n\t\t\tconst {data, error} = await saveUser(user._id, user);\n\t\t\tif (data) {\n\t\t\t\tlet bdUser = data;\n\t\t\t\tbdUser.password = null;\n\t\t\t\tsetCurrentUser(bdUser);\n\t\t\t\tsetError(null);\n\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tsetError('Nothing change!');\n\t\t}\n\t}\n\t\n\tconst updateUser = async (id, updatedUser) => {\n\t\tconst toUpdate = users.find((user) => user._id === id);\n\t\tif (toUpdate) {\n\t\t\tconst {data, error} = await saveUser(updatedUser._id, updatedUser);\n\t\t\tif (data) {\n\t\t\t\tlet bdUser = data;\n\t\t\t\tbdUser.password = null;\n\t\t\t\tsetEditing(false);\n\t\t\t\tsetUsers(users.map(user => (user._id === bdUser._id ? bdUser : user)));\n\t\t\t\tsetError(null);\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\tsetError('Nothing change!');\n\t\t}\n\t}\n\n\n\tconst editRow = user => {\n\t\tsetEditing(true);\n\n\t\tsetCurrentUser({ _id: user._id, name: user.name, email: user.email, isAdmin: user.isAdmin, password: user.password });\n\t}\n\n\tconst saveUser = async (id, user) => {\n\t\tlet result = {};\n\t\tif (!user.password) {\n\t\t\tconst {data, error} = await getUser(id);\n\t\t\tif (data) {\n\t\t\t\tuser.password = data.password;\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\tresult.error = error;\n\t\t\t}\n\t\t}\n\n\t\tif (result.error) return result;\n\t\treturn await saveUserBD(user);\n\t}\n\n\tconst onChangeSeason = value => {\n\t\tlet id = null;\n\t\tif (value !== \"0\") {\n\t\t\tid = value;\n\t\t}\n\t\t\t\n\t\tsetSelectedSeason(value);\n\t\tconsole.log(\"->\", selectedSeason);\n\n\t\tloadStatus(currentUser._id, id)\n\t\t\t.then((data) => {\n\t\t\t\tif (data.data) {\n\t\t\t\t\tlet statusApi = data.data;\n\t\t\t\t\tstatusApi.forEach((status, index) => status._id = index + 1);\n\t\t\t\t\t\n\t\t\t\t\tsetStatus(statusApi);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(\"Error: \", err);\n\t\t\t})\n\t}\n\n\treturn display(error, admin, editing, users, setEditing, currentUser, _updateUser, updateUser, _addUser, editRow, deleteUser, cancelNonAdminEdit, selectedSeason, seasons, onChangeSeason, status);\n}\n\nfunction display(error, admin, editing, users, setEditing, currentUser,_updateUser, updateUser, _addUser, editRow, deleteUser, cancelNonAdminEdit, selectedSeason, seasons, onChangeSeason, status) {\n\t\n\tif (admin.admin) {\n\t\treturn (\n\t\t\t<div className=\"main\">\n\t\t\t\t<div className=\"flex-container\">\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<h2>Edit User</h2>\n\t\t\t\t\t\t\t\t<EditUser\n\t\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t\t\tcancelNonAdminEdit={cancelNonAdminEdit}\n\t\t\t\t\t\t\t\t\tisAdmin={admin.admin}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<h2>Add User</h2>\n\t\t\t\t\t\t\t\t<AddUser addUser={_addUser} />\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<h2>View users</h2>\n\t\t\t\t\t\t<UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\n\t\t\t</div>\n\t\t)\n\t}\n\telse {\n\t\treturn (\n\t\t\t<div className=\"main\">\n\t\t\t\t<div className=\"flex-container\">\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Edit User</h2>\n\t\t\t\t\t\t\t<EditUser\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\tupdateUser={_updateUser}\n\t\t\t\t\t\t\t\tcancelNonAdminEdit={cancelNonAdminEdit}\n\t\t\t\t\t\t\t\tisAdmin={admin.admin}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<h2>Payments</h2>\n\t\t\t\t\t\t<div className=\"seasonClass\" >\n\t\t\t\t\t\t\t<label style={labelStyle} htmlFor=\"seasonId\">Seasons</label>\n\t\t\t\t\t\t\t<div className=\"seasonObj\" >\n\t\t\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\t\t\tname=\"seasonId\" \n\t\t\t\t\t\t\t\t\toptions={seasons} \n\t\t\t\t\t\t\t\t\thint=\"select Season\" \n\t\t\t\t\t\t\t\t\tonChange={onChangeSeason} \n\t\t\t\t\t\t\t\t\tvalue={selectedSeason}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<StatusTable status={status} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst labelStyle = { fontWeight: \"bold\"}\nconst errorStyle = {\n\ttextShadow: \"10px 10px 10px\",\n    color: \"red\"\n}\n\nconst loadUsers = async (token, admin)=> {\n\tconst cUser = Storage.get('cUser');\n\tlet path = `status/list/${cUser._id}`;\n\t\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('GET', null, headers);\n\t\n\tif (admin)\n\t\treturn await ServiceData.execute('users', options);\n\telse\n\t\treturn await ServiceData.normalUserExecute('users/me', 'seasons', path, options);\n}\n\nconst loadStatus = async (userID, seasonID) => {\n\tconst token = Storage.get('token');\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('GET', null, headers);\n\tlet path = `status/list/${userID}`;\n\tif (seasonID) {\n\t\tpath = `status/list/${seasonID}/user/${userID}`;\n\t}\n\n\treturn await ServiceData.execute(path, options);\n}\n\nconst getUser = async (id)=> {\n\tconst token = Storage.get('token');\n\tconst path = `users/${id}`;\n\tlet result = {}\n\t\n\tconst headers = ServiceData.headers(token);\n    const options = ServiceData.options('GET', null, headers);\n\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetUser Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\n\treturn result;\n}\n\nconst saveUserBD = async (user) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tlet path = `users/${user._id}`;\n\tlet method = 'PUT'\n\tif (!user._id) {\n\t\tpath = \"users\";\n\t\tmethod = \"POST\";\n\t}\n\t\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options(method, user, headers);\n\t\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetUser Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nconst deleteUserBD = async (id) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tconst path = `users/${id}`;\n\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('DELETE', null, headers);\n\t\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetUser Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nexport default User\n\n","import React, { useState } from 'react';\r\nimport { ImageUtils } from '../../../service/utils';\r\nimport Joi from 'joi';\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nconst AddTeam = props => {\r\n    const initialState = { _id: null, name: '', sigla: '', logo: null };\r\n    const [ team, setTeam ] = useState(initialState);\r\n    const [ img, setImg] = useState({img: null, imgUrl: null});\r\n    const [ error, setError ] = useState(null);\r\n    let fileInput = React.createRef();\r\n\r\n    const setFileInputRef = el => {\r\n        fileInput = el;\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        \r\n\t\tsetTeam({ ...team, [name]: value });\r\n    }\r\n\r\n    const handleImage = event => {\r\n        event.preventDefault();\r\n        \r\n        let reader = new FileReader();\r\n        let img = event.target.files[0];\r\n        \r\n        const error = ImageUtils.validateImage(img);\r\n        if (error) {\r\n            setError(error);\r\n            fileInput.value = null;\r\n            return;\r\n        }\r\n        else  setError(null);\r\n\r\n        reader.onload = () => {\r\n            setImg({img: img, imgUrl: reader.result});\r\n            let t = team;\r\n            t.logo = img;\r\n            setTeam(t);\r\n        }\r\n\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    const submitTeam = () => {\r\n        if (!team.name || !team.sigla || !team.logo) {\r\n            setError(\"Error: Fill all fields.\");\r\n        } \r\n        else {\r\n            const { error } = validateTeam(team, img);\r\n            if (error) {\r\n                setError(error.details[0].message);\r\n            }\r\n            else {\r\n                props.addTeam(team);\r\n                setTeam(initialState);\r\n                fileInput.value = null;\r\n                setImg({img: null, imgUrl: null});\r\n                setError(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" value={team ? team.name : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"sigla\">Sigla</label>\r\n                <input type=\"text\" name=\"sigla\" value={team? team.sigla: ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"logo\">Logo</label>\r\n                <input className=\"imageInput\" type=\"file\" onChange={(e)=> handleImage(e)} ref={setFileInputRef}/>\r\n                <div className=\"image\">\r\n                    <button className=\"imageBtn\" onClick={()=>fileInput.click()}>Image</button>\r\n                    <div className=\"imagePreview\">\r\n                        {img.imgUrl && ( <img src={img.imgUrl} alt=\"\"/> )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={submitTeam} >Add</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n\t)\r\n}\r\n\r\nfunction validateTeam(team, img) {\r\n    const {name} = img.img;\r\n    const t = {\r\n        name: team.name,\r\n        sigla: team.sigla,\r\n        logo: name\r\n    }\r\n    \r\n    const schema = {\r\n        name: Joi.string().min(5).max(50).required(),\r\n        sigla: Joi.string().min(3).max(5).required(),\r\n        logo: Joi.string()\r\n    };\r\n\r\n    return Joi.validate(t, schema);\r\n}\r\n\r\nexport default AddTeam;","import React, { useState, useEffect } from 'react';\r\nimport { ImageUtils } from '../../../service/utils';\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nconst EditTeam = props => {\r\n    const [ readMode, setReadMode ] = useState(true);\r\n    const [ team, setTeam ] = useState(props.currentTeam);\r\n    const [ img, setImg] = useState({img: null, imgUrl: null});\r\n    const [ error, setError ] = useState(null);\r\n\r\n    let fileInput = React.createRef();\r\n\r\n    useEffect(\r\n        () => {\r\n            setTeam(props.currentTeam);\r\n        }, \r\n        [props]\r\n    );\r\n\r\n    const setFileInputRef = el => {\r\n        fileInput = el;\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        props.setEditing(false);\r\n        setImg({img: null, imgUrl: null});\r\n        setReadMode(true);\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        const {name, value } = e.target;\r\n\r\n        setTeam({ ...team, [name]: value });\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        setReadMode(true);\r\n        setImg({img: null, imgUrl: null});\r\n        props.updateTeam(team);\r\n    }\r\n\r\n    const handleImage = event => {\r\n        event.preventDefault();\r\n        setReadMode(false);\r\n        \r\n        let reader = new FileReader();\r\n        let img = event.target.files[0];\r\n        \r\n        const error = ImageUtils.validateImage(img);\r\n        if (error) {\r\n            setError(error);\r\n            fileInput.value = null;\r\n            return;\r\n        }\r\n\r\n        reader.onload = () => {\r\n            setImg({img: img, imgUrl: reader.result});\r\n            let t = team;\r\n            t.logo = img;\r\n            setTeam(t);\r\n        }\r\n\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" value={team ? team.name : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"sigla\">Sigla</label>\r\n                <input type=\"text\" name=\"sigla\" value={team? team.sigla: ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"logo\">Logo</label>\r\n                <input className=\"imageInput\" type=\"file\" onChange={(e)=> handleImage(e)} ref={setFileInputRef}/>\r\n                <div className=\"image\">\r\n                    <button className=\"imageBtn\" onClick={()=>fileInput.click()}>Image</button>\r\n                    <div className=\"imagePreview\">\r\n                        {readMode && ( <img src={ImageUtils.getImage(team.logo) } alt=\"\"/> )}\r\n                        {img.imgUrl && ( <img src={img.imgUrl} alt=\"\"/> )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={handleUpdate} >Update</button>\r\n                <button onClick={handleEdit} className=\"button muted-button\">Cancel</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditTeam;","import React from 'react';\r\nimport ReactTable from '../../custom/bootstraptab';\r\nimport {ImageUtils} from '../../../service/utils';\r\n\r\nconst TeamTable = props => {\r\n    \r\n    const editRow = (team) => {\r\n        props.editRow(team);\r\n    }\r\n\r\n    const deleteRow = (id) => {\r\n        props.deleteTeam(id);\r\n    }\r\n\r\n    const columns = [\r\n        { dataField: '_id', text: 'ID', hidden: true }, \r\n        { dataField: 'name', text: 'Name', sort: true, headerAlign: 'center' }, \r\n        { dataField: 'sigla', text: 'Sigla', sort: true, headerAlign: 'center' }, \r\n        { dataField: 'logo', text: 'Logo', headerAlign: 'center',\r\n          formatter: (cell, row) => {\r\n            return (\r\n            <div className=\"logo\">\r\n                {row.logo && ( <img src={ImageUtils.getImage(row.logo)} alt=\"\"/> )}\r\n            </div>)\r\n          } \r\n        }, \r\n        { dataField: 'actions', text: 'Actions', isDummyField: true,\r\n          formatter: (cell, row ) => {\r\n              return ( \r\n                  <div className=\"button-joiner\">\r\n                      <button\r\n                          onClick={() => {\r\n                              editRow(row);\r\n                          }}\r\n                          className=\"button\"\r\n                      >\r\n                          Edit\r\n                      </button>\r\n                      <button\r\n                          onClick={() => {\r\n                              deleteRow(row._id);\r\n                          }}\r\n                          className=\"button muted-button\"\r\n                      >\r\n                          Delete\r\n                      </button>\r\n                  </div>\r\n              );\r\n          },\r\n          headerAlign: 'center'}\r\n    ];\r\n      \r\n    const defaultSorted = [{dataField: 'name', order: 'asc' }];\r\n\r\n    return(<ReactTable listData={props.teams} columns={columns} defaultSorted={defaultSorted} searchID={'team'} />);\r\n}\r\n\r\nexport default TeamTable;","import React, { useState, useEffect, Fragment } from \"react\";\nimport AddTeam from \"../teamComponents/addTeam\";\nimport EditTeam from \"../teamComponents/editTeam\";\nimport TeamTable from \"../teamComponents/teamTable\";\nimport ServiceData from \"../../../service/dataUtils\";\nimport Storage from \"../../../service/StorageData\";\n\n\nconst Team = () => {\n    const [ error, setError ] = useState(null);\n    const [ teams, setTeams ] = useState([]);\n    const [ currentTeam, setCurrentTeam ] = useState({ _id: '', name: '', sigla: '', logo: ''});\n    const [ editing, setEditing ] = useState(false);\n\n    useEffect(() => {\n        const token = Storage.get('token');\n        if (token) {\n            loadTeam(token)\n            .then((data) => {\n                if (data.data) {\n                    setTeams(data.data);\n                    setError(null);\n                }\n                if (data.error) {\n                    setError( data.error );\n                }\n            })\n            .catch(err => {\n                console.log(\"Error: \", err);\n            })\n        }\n\n    }, [currentTeam]);\n\n    //Crud operations\n    const _addTeam = async (team) => {\n\t\tconst {error, data} = await addTeamInBD(team);\n\t\tif (data) {\n\t\t\tsetTeams([ ...teams, data ]);\n\t\t\tsetError(null); \n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n    }\n\n    const addTeamInBD = async (team) => {\n\t\treturn await saveTeamBD(team);\n\t}\n\n    const deleteTeam = async (id) => {\n\t\tsetEditing(false);\n\t\t\n\t\tconst {error, data} = await deleteTeamBD(id);\n\t\tif (data) {\n\t\t\tconst bdTeam = data;\n\t\t\tsetTeams(teams.filter(team => team._id !== bdTeam._id));\n\t\t\tsetError(null);\n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n\t\t\n    }\n    \n    const updateTeam = async (team) => {\n\t\tconst id = team._id;\n\t\tconst toUpdate = teams.find((team) => team._id === id);\n\t\tif (toUpdate) {\n\t\t\tconst {data, error} = await saveTeamBD(team);\n\t\t\tif (data) {\n\t\t\t\tlet bdTeam = data;\n\t\t\t\tsetEditing(false);\n\t\t\t\tsetTeams(teams.map(team => (team._id === bdTeam._id ? bdTeam : team)));\n\t\t\t\tsetError(null);\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\tsetError('Nothing change!');\n\t\t}\n    }\n    \n    const editRow = team => {\n\t\tsetEditing(true);\n\n\t\tsetCurrentTeam({ _id: team._id, name: team.name, sigla: team.sigla, logo: team.logo });\n    }\n\n\n    return display(error, editing, teams, setEditing, currentTeam, updateTeam, _addTeam, editRow, deleteTeam);\n}\n\nfunction display(error, editing, teams, setEditing, currentTeam, updateTeam, _addTeam, editRow, deleteTeam) {\n    return (\n        <div className=\"main\">\n            <div className=\"flex-container\">\n                <div className=\"column\">\n                    {editing ? (\n                        <Fragment>\n                            <h2>Edit Team</h2>\n                            <EditTeam\n                                editing={editing}\n                                setEditing={setEditing}\n                                currentTeam={currentTeam}\n                                updateTeam={updateTeam}\n                            />\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <h2>Add Team</h2>\n                            <AddTeam addTeam={_addTeam} />\n                        </Fragment>\n                    )}\n                </div>\n                <div className=\"column\">\n                    <h2>View Teams</h2>\n                    <TeamTable teams={teams} editRow={editRow} deleteTeam={deleteTeam} />\n                </div>\n            </div>\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\n        </div>\n    )\n}\n\nconst errorStyle = {\n\ttextShadow: \"10px 10px 10px\",\n    color: \"red\"\n}\n\nconst loadTeam = async (token) => {\n\tconst headers = ServiceData.headers(token);\n    const options = ServiceData.options('GET', null, headers);\n    return await ServiceData.execute('teams', options);\n}\n\nconst saveTeamBD = async (team) => {\n\tlet result = {};\n\tconst haveFile = team.logo.size ? true : false;\n\t\n\n\tconst token = Storage.get('token');\n\tlet path = haveFile ?`teams/${team._id}`: `teams/${team._id}/noFile`;\n\tlet method = 'PUT'\n\tif (!team._id) {\n\t\tpath = \"teams\";\n\t\tmethod = \"POST\";\n\t}\n\t\n\tlet formData = new FormData();\n\tif (team._id) {\n\t\tformData.append('_id', team._id);\n\t}\n\tformData.append('logo', team.logo);\n\tformData.append('name', team.name);\n\tformData.append('sigla', team.sigla);\n\n\tconst headers = haveFile ? ServiceData.headers(token, true) : ServiceData.headers(token);\n\tconst options = haveFile ? ServiceData.options(method, formData, headers) : ServiceData.options(method, team, headers);\n\t\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetTeam Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nconst deleteTeamBD = async (id) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tconst path = `teams/${id}`;\n\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('DELETE', null, headers);\n\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetTeam Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nexport default Team;","import React, { useState} from 'react';\r\nimport Joi from 'joi';\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nconst AddChampionship = (props) => {\r\n    const initialState = { _id: null, name: ''};\r\n    const [ championship, setChampionship ] = useState(initialState);\r\n    const [ error, setError ] = useState(null);\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        \r\n\t\tsetChampionship({ ...championship, [name]: value });\r\n    }\r\n\r\n    const submitChampionship = () => {\r\n        if (!championship.name ) {\r\n            setError(\"Error: Fill name.\");\r\n        } \r\n        else {\r\n            const { error } = validateChampionship(championship);\r\n            if (error) {\r\n                setError(error.details[0].message);\r\n            }\r\n            else {\r\n                props.addChampionship(championship);\r\n                setChampionship(initialState);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" value={championship ? championship.name : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={submitChampionship} >Add</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n\t)\r\n}\r\n\r\nfunction validateChampionship(championship) {\r\n\r\n    const schema = {\r\n        name: Joi.string().min(5).max(50).required()\r\n    };\r\n\r\n    return Joi.validate(championship, schema);\r\n}\r\n\r\nexport default AddChampionship;","import React, { useState, useEffect } from 'react';\r\n\r\nconst EditChampionship = (props) => {\r\n    const [ championship, setChampionship ] = useState(props.currentChampionship);\r\n\r\n    useEffect(\r\n        () => {\r\n            setChampionship(props.currentChampionship);\r\n        }, \r\n        [props]\r\n    );\r\n\r\n    const handleEdit = () => {\r\n        props.setEditing(false);\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        const {name, value } = e.target;\r\n\r\n        setChampionship({ ...championship, [name]: value });\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        props.updateChampionship(championship._id, championship);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" value={championship ? championship.name : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={handleUpdate} >Update</button>\r\n                <button onClick={handleEdit} className=\"button muted-button\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditChampionship;","import React from 'react';\r\nimport ReactTable from '../../custom/bootstraptab';\r\n\r\nconst ChampionshipTable = (props) => {\r\n    const editRow = (championship) => {\r\n        props.editRow(championship);\r\n    }\r\n\r\n    const deleteRow = (id) => {\r\n        props.deleteChampionship(id);\r\n    }\r\n\r\n    const columns = [\r\n        { dataField: '_id', text: 'ID', hidden: true }, \r\n        { dataField: 'name', text: 'Name', sort: true, headerAlign: 'center' }, \r\n        { dataField: 'actions', text: 'Actions', isDummyField: true,\r\n          formatter: (cell, row ) => {\r\n              return ( \r\n                  <div className=\"button-joiner\">\r\n                      <button\r\n                          onClick={() => {\r\n                              editRow(row);\r\n                          }}\r\n                          className=\"button\"\r\n                      >\r\n                          Edit\r\n                      </button>\r\n                      <button\r\n                          onClick={() => {\r\n                              deleteRow(row._id);\r\n                          }}\r\n                          className=\"button muted-button\"\r\n                      >\r\n                          Delete\r\n                      </button>\r\n                  </div>\r\n              );\r\n          },\r\n          headerAlign: 'center'}\r\n    ];\r\n      \r\n    const defaultSorted = [{dataField: 'name', order: 'asc' }];\r\n\r\n    return(<ReactTable listData={props.championships} columns={columns} defaultSorted={defaultSorted} searchID={'champ'}/>);\r\n}\r\n\r\nexport default ChampionshipTable;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport AddChampionship from \"../championshipComponents/addChampionship\";\r\nimport EditChampionship from \"../championshipComponents/editChampionship\";\r\nimport ChampionshipTable from \"../championshipComponents/championshipTable\";\r\nimport ServiceData from \"../../../service/dataUtils\";\r\nimport Storage from \"../../../service/StorageData\";\r\n\r\nconst Championship = () => {\r\n\r\n    const [ error, setError ] = useState(null);\r\n    const [ championships, setChampionship ] = useState([]);\r\n    const [ currentChampionship, setCurrentChampionship ] = useState({ _id: '', name: ''});\r\n    const [ editing, setEditing ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const token = Storage.get('token');\r\n        if (token) {\r\n            loadChampionship(token)\r\n            .then((data) => {\r\n                if (data.data) {\r\n                    setChampionship(data.data);\r\n                    setError(null);\r\n                }\r\n                if (data.error) {\r\n                    setError( data.error );\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Error: \", err);\r\n            })\r\n        }\r\n\r\n    }, [currentChampionship]);\r\n\r\n    //Crud operations\r\n    const _addChampionship = async (championship) => {\r\n\t\tconst {error, data} = await addChampionshipInBD(championship);\r\n\t\tif (data) {\r\n\t\t\tsetChampionship([ ...championships, data ]);\r\n\t\t\tsetError(null); \r\n\t\t}\r\n\t\tif (error) {\r\n\t\t\tsetError(error);\r\n\t\t}\r\n    }\r\n\r\n    const addChampionshipInBD = async (championship) => {\r\n\t\treturn await saveChampionshipBD(championship);\r\n\t}\r\n\r\n    const deleteChampionship = async (id) => {\r\n\t\tsetEditing(false);\r\n\t\t\r\n\t\tconst {error, data} = await deleteChampionshipBD(id);\r\n\t\tif (data) {\r\n\t\t\tconst bdChampionship = data;\r\n\t\t\tsetChampionship(championships.filter(championship => championships._id !== bdChampionship._id));\r\n\t\t\tsetError(null);\r\n\t\t}\r\n\t\tif (error) {\r\n\t\t\tsetError(error);\r\n\t\t}\r\n\t\t\r\n    }\r\n    \r\n    const updateChampionship = async (id, champ) => {\r\n\t\tconst toUpdate = championships.find((championship) => championship._id === id);\r\n\t\tif (toUpdate) {\r\n\t\t\tconst {data, error} = await saveChampionshipBD(champ);\r\n\t\t\tif (data) {\r\n\t\t\t\tlet bdChampionship = data;\r\n\t\t\t\tsetEditing(false);\r\n                setChampionship(championships.map(championship => (championship._id === bdChampionship._id ? \r\n                    bdChampionship : championship)));\r\n\t\t\t\tsetError(null);\r\n\t\t\t}\r\n\t\t\tif (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetError(error);\r\n\t\t\t}\r\n\t\t} \r\n\t\telse {\r\n\t\t\tsetError('Nothing change!');\r\n\t\t}\r\n    }\r\n    \r\n    const editRow = championship => {\r\n\t\tsetEditing(true);\r\n\r\n\t\tsetCurrentChampionship({ _id: championship._id, name: championship.name });\r\n    }\r\n\r\n\r\n    return display(error, editing, championships, setEditing, currentChampionship, updateChampionship, _addChampionship, editRow, deleteChampionship);\r\n}\r\n\r\nfunction display(error, editing, championships, setEditing, currentChampionship, updateChampionship, _addChampionship, editRow, deleteChampionship) {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"flex-container\">\r\n                <div className=\"column\">\r\n                    {editing ? (\r\n                        <Fragment>\r\n                            <h2>Edit Championship</h2>\r\n                            <EditChampionship\r\n                                editing={editing}\r\n                                setEditing={setEditing}\r\n                                currentChampionship={currentChampionship}\r\n                                updateChampionship={updateChampionship}\r\n                            />\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <h2>Add Championship</h2>\r\n                            <AddChampionship addChampionship={_addChampionship} />\r\n                        </Fragment>\r\n                    )}\r\n                </div>\r\n                <div className=\"column\">\r\n                    <h2>View Championship</h2>\r\n                    <ChampionshipTable championships={championships} editRow={editRow} deleteChampionship={deleteChampionship} />\r\n                </div>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst errorStyle = {\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nconst loadChampionship = async (token) => {\r\n\tconst headers = ServiceData.headers(token);\r\n    const options = ServiceData.options('GET', null, headers);\r\n    return await ServiceData.execute('championships', options);\r\n}\r\n\r\nconst saveChampionshipBD = async (championship) => {\r\n\tlet result = {};\r\n\tconst token = Storage.get('token');\r\n\tlet path = `championships/${championship._id}`;\r\n\tlet method = 'PUT'\r\n\tif (!championship._id) {\r\n\t\tpath = \"championships\";\r\n\t\tmethod = \"POST\";\r\n\t}\r\n\t\r\n\tconst headers = ServiceData.headers(token);\r\n\tconst options = ServiceData.options(method, championship, headers);\r\n\t\r\n\tawait ServiceData.execute(path, options)\r\n\t\t.then((data) => {\r\n\t\t\tif (data.data) {\r\n\t\t\t\tresult.data = data.data;\r\n\t\t\t}\r\n\t\t\tif (data.error) {\r\n\t\t\t\tresult.error = data.error;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(\"GetChampionship Error: \", err);\r\n\t\t\tresult.error = err.response.data;\r\n\t\t});\r\n\t\r\n\treturn result;\r\n}\r\n\r\nconst deleteChampionshipBD = async (id) => {\r\n\tlet result = {};\r\n\tconst token = Storage.get('token');\r\n\tconst path = `championships/${id}`;\r\n\r\n\tconst headers = ServiceData.headers(token);\r\n\tconst options = ServiceData.options('DELETE', null, headers);\r\n\r\n\tawait ServiceData.execute(path, options)\r\n\t\t.then((data) => {\r\n\t\t\tif (data.data) {\r\n\t\t\t\tresult.data = data.data;\r\n\t\t\t}\r\n\t\t\tif (data.error) {\r\n\t\t\t\tresult.error = data.error;\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(\"GetChampionship Error: \", err);\r\n\t\t\tresult.error = err.response.data;\r\n\t\t});\r\n\t\r\n\treturn result;\r\n}\r\n\r\nexport default Championship;","import React, { useState, useEffect} from 'react';\r\nimport Select from '../../custom/selectSearch';\r\nimport Joi from 'joi';\r\n\r\nconst AddPayment = (props) => {\r\n    const initialState = { date: '', userId: '', amount: ''};\r\n    const [ payment, setPayment ] = useState(initialState);\r\n    const [ error, setError ] = useState(null);\r\n    const [ users, setUsers] = useState([]);\r\n    const [ selectedUser, setSelectedUser] = useState('');\r\n     \r\n\r\n    useEffect(\r\n        () => {\r\n            let usersApi = props.users.map(user => {\r\n                return {value: user._id, name: user.name}\r\n            });\r\n\r\n            setUsers(usersApi);\r\n        }, \r\n        [props]\r\n    );\r\n    \r\n    const onChangeUser = value => {\r\n        setSelectedUser(value);\r\n        \r\n        payment.userId = value;\r\n        setPayment(payment);\r\n\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        \r\n\t\tsetPayment({ ...payment, [name]: value });\r\n    }\r\n\r\n    const paymentValidator = () => {\r\n        const {date, userId, amount} = payment;\r\n        if (!date) {\r\n            return \"Error: Fill Date!\"\r\n        }\r\n        if (!userId) {\r\n            return \"Error: Select User!\"\r\n        }\r\n        if (!amount) {\r\n            return \"Error: Add amount!\"\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    const submitPayment = () => {\r\n        let errorMsg = paymentValidator();\r\n        if (errorMsg) {\r\n            setError(errorMsg);\r\n        }\r\n        else {\r\n            const { error } = validatePayment(payment);\r\n            if (error) {\r\n                setError(error.details[0].message);\r\n            }\r\n            else {\r\n                props.addPayment(payment);\r\n                setPayment(initialState);\r\n                setError(null);\r\n                setSelectedUser('');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"date\" name=\"date\" value={payment ? payment.date : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"userId\">User</label>\r\n                <Select \r\n                    name=\"userId\" \r\n                    options={users} \r\n                    hint=\"select user\" \r\n                    onChange={onChangeUser} \r\n                    value={selectedUser}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"amount\">Amount</label>\r\n                <input type=\"number\" name=\"amount\" value={payment ? payment.amount : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={submitPayment} >Add</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n\t)\r\n}\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nfunction validatePayment(amount) {\r\n\r\n    const schema = {\r\n        date: Joi.date().required(),\r\n        userId: Joi.string().min(24).required(),\r\n        amount: Joi.number().min(0).required()\r\n    };\r\n\r\n    return Joi.validate(amount, schema);\r\n}\r\n\r\nexport default AddPayment;","import React, { useState, useEffect } from 'react';\r\nimport Select from '../../custom/selectSearch';\r\n\r\nconst EditPayment = (props) => {\r\n    const [ payment, setPayment ] = useState(props.currentPayment);\r\n    const [ users, setUsers] = useState([]);\r\n    const [ selectedUser, setSelectedUser] = useState(props.currentPayment.userId);\r\n    const [ error, setError ] = useState(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            setPayment(props.currentPayment);\r\n            let usersApi = props.users.map(user => {\r\n                return {value: user._id, name: user.name}\r\n            });\r\n\r\n            setUsers(usersApi);\r\n            setSelectedUser(props.currentPayment.userId);\r\n        }, \r\n        [props]\r\n    );\r\n\r\n    const handleEdit = () => {\r\n        props.setEditing(false);\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        const {name, value } = e.target;\r\n\r\n        setPayment({ ...payment, [name]: value });\r\n    }\r\n\r\n    const onChangeUser = value => {\r\n        setSelectedUser(value);\r\n        \r\n        payment.userId = value;\r\n        setPayment(payment);\r\n\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        setError(null);\r\n        props.updatePayment(payment._id, payment);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"date\" name=\"date\" value={payment ? payment.date : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"userId\">User</label>\r\n                <Select \r\n                    name=\"userId\" \r\n                    options={users} \r\n                    hint=\"select User\" \r\n                    onChange={onChangeUser} \r\n                    value={selectedUser}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"amount\">Amount</label>\r\n                <input type=\"number\" name=\"amount\" value={payment ? payment.amount : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={handleUpdate} >Update</button>\r\n                <button onClick={handleEdit} className=\"button muted-button\">Cancel</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nexport default EditPayment;","import React from 'react';\r\nimport ReactTable from '../../custom/bootstraptab';\r\nimport moment from 'moment';\r\n\r\nconst PaymentTable = (props) => {\r\n    const editRow = (payment) => {\r\n        props.editRow(payment);\r\n    }\r\n\r\n    const deleteRow = (id) => {\r\n        props.deletePayment(id);\r\n    }\r\n\r\n    const columns = [\r\n        { dataField: '_id', text: 'ID', hidden: true }, \r\n        { dataField: 'date', text: 'Date', sort: true, headerAlign: 'center', \r\n          formatter: (cell, row) => {\r\n            return (\r\n                <div style={{textAlign:\"center\"}}className=\"date-center\">\r\n                    {`${moment(row.date).format(\"DD-MM-YYYY\")? moment(row.date).format(\"DD-MM-YYYY\"):moment(row.date).format(\"DD-MM-YYYY\") }`}\r\n                </div>\r\n            );\r\n          }\r\n        },\r\n        { dataField: 'user._id', text: 'USER_ID', hidden: true},\r\n        { dataField: 'user.name', text: 'Name', sort: true, headerAlign: 'center'},\r\n        { dataField: 'amount', text: 'Amount', headerAlign: 'center',\r\n          formatter: (cell, row) => {\r\n            return (\r\n            <div style={{textAlign:\"center\"}}>\r\n                <div style={{display:\"inline-block\", padding: \"2px\"}}>\r\n                <div className=\"score-box\">\r\n                        {row.amount}\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n          } \r\n        },\r\n        { dataField: 'actions', text: 'Actions', isDummyField: true,\r\n          formatter: (cell, row ) => {\r\n              return ( \r\n                  <div className=\"button-joiner\">\r\n                      <button\r\n                          onClick={() => {\r\n                              editRow(row);\r\n                          }}\r\n                          className=\"button\"\r\n                      >\r\n                          Edit\r\n                      </button>\r\n                      <button\r\n                          onClick={() => {\r\n                              deleteRow(row._id);\r\n                          }}\r\n                          className=\"button muted-button\"\r\n                      >\r\n                          Delete\r\n                      </button>\r\n                  </div>\r\n              );\r\n          },\r\n          headerAlign: 'center'}\r\n    ];\r\n      \r\n    const defaultSorted = [{dataField: 'name', order: 'asc' }];\r\n\r\n    return(<ReactTable listData={props.payments} columns={columns} defaultSorted={defaultSorted} maxRows={5} searchID={'payment'}/>);\r\n}\r\n\r\nexport default PaymentTable;","import React, { useState, useEffect, Fragment } from \"react\";\nimport AddPayment from \"../paymentComponents/addPayment\";\nimport EditPayment from \"../paymentComponents/editPayment\";\nimport PaymentTable from \"../paymentComponents/paymentTable\";\nimport ServiceData from \"../../../service/dataUtils\";\nimport Storage from \"../../../service/StorageData\";\nimport moment from 'moment';\n\nconst Payment = () => {\n    \n    const [ error, setError ] = useState(null);\n\tconst [ payments, setPayments ] = useState([]);\n\tconst [ users, setUsers ] = useState([]);\n    const [ currentPayment, setCurrentPayment ] = useState({ _id: '', date: '', amount: '', userID: '' });\n\tconst [ editing, setEditing ] = useState(false);\n\n    useEffect(() => {\n        const token = Storage.get('token');\n        if (token) {\n            loadData(token)\n            .then((data) => {\n\t\t\t\t\n                if (data.payments) {\n                    setPayments(data.payments);\n                    setError(null);\n\t\t\t\t}\n\t\t\t\tif (data.users) {\n\t\t\t\t\tsetUsers(data.users);\n\t\t\t\t\tsetError(null);\n\t\t\t\t}\n                if (data.error) {\n                    setError( data.error );\n                }\n            })\n            .catch(err => {\n                console.log(\"Error: \", err);\n            })\n        }\n\n    }, [currentPayment]);\n\n    //Crud operations\n    const _addPayment = async (payment) => {\n\t\t\n\t\tconst {error, data} = await addPaymentInBD(payment);\n\t\tif (data) {\n\t\t\tsetPayments(data);\n            setError(null);\n            setEditing(false);\n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n    }\n\n    const addPaymentInBD = async (payment) => {\n\t\treturn await savePaymentBD(payment);\n\t}\n\n    const deletePayment = async (id) => {\n\t\tsetEditing(false);\n\t\t\n\t\tconst {error, data} = await deletePaymentBD(id);\n\t\tif (data) {\n            const bdPayment = data;\n\t\t\tsetPayments(payments.filter(payment => payment._id !== bdPayment._id));\n\t\t\tsetError(null);\n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n\t\t\n    }\n    \n    const updatePayment = async (id, payment) => {\n\t\tconst toUpdate = payments.find((payment) => payment._id === id);\n\t\tif (toUpdate) {\n\t\t\tconst {data, error} = await savePaymentBD(payment);\n\t\t\tif (data) {\n\t\t\t\tlet bdPayment = data;\n\t\t\t\tsetEditing(false);\n\t\t\t\tsetPayments(payments.map(payment => (payment._id === bdPayment._id ? bdPayment : payment)));\n\t\t\t\tsetError(null);\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\tsetError('Nothing change!');\n\t\t}\n    }\n    \n    const editRow = payment => {\n\t\tsetEditing(true);\n\t\tconst {user} = payment;\n\t\tsetCurrentPayment({ \n\t\t\t_id: payment._id, \n\t\t\tdate: moment(payment.date).format(\"yyyy-MM-DD\"), \n            amount: payment.amount,\n\t\t\tuserId: user._id\n\t\t});\n    }\n\n    return display(error, editing, payments, users, setEditing, currentPayment, updatePayment, _addPayment, editRow, deletePayment);\n}\n\nfunction display(error, editing, payments, users, setEditing, currentPayment, updatePayment, _addPayment, editRow, deletePayment) {\n    return (\n        <div className=\"main\">\n            <div className=\"flex-container\">\n                <div className=\"column-game\">\n                    {editing ? (\n                        <Fragment>\n                            <h2>Edit Payment</h2>\n                            <EditPayment\n                                editing={editing}\n                                setEditing={setEditing}\n                                currentPayment={currentPayment}\n                                updatePayment={updatePayment}\n\t\t\t\t\t\t\t\tusers={users}\n                            />\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <h2>Add Payment</h2>\n                            <AddPayment addPayment={_addPayment} users={users} />\n                        </Fragment>\n                    )}\n                </div>\n                <div className=\"column-game-table\">\n                    <h2>View Payments</h2>\n                    <PaymentTable payments={payments} editRow={editRow} deletePayment={deletePayment} />\n                </div>\n            </div>\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\n        </div>\n    )\n}\n\nconst errorStyle = {\n\ttextShadow: \"10px 10px 10px\",\n    color: \"red\"\n}\n\nconst loadData = async (token) => {\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('GET', null, headers);\n\treturn await ServiceData.paymentExecute('payments', 'users', options);\n}\n\nconst savePaymentBD = async (payment) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tlet path = `payments/${payment._id}`;\n\tlet method = 'PUT'\n\tif (!payment._id) {\n\t\tpath = \"payments\";\n\t\tmethod = \"POST\";\n\t}\n\t\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options(method, payment, headers);\n\t\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"Put/Post Payment Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nconst deletePaymentBD = async (id) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tconst path = `payments/${id}`;\n\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('DELETE', null, headers);\n\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"Delete Payment Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nexport default Payment;","import React, { useState, useEffect} from 'react';\r\nimport Select from '../../custom/selectSearch';\r\nimport Joi from 'joi';\r\n\r\nconst AddGame = (props) => {\r\n    const initialState = { name: '', date: '', championshipId: '', homeTeamId: '', awayTeamId: '',\r\n        homeGoals: '', awayGoals: '' };\r\n    const [ game, setGame ] = useState(initialState);\r\n    const [ error, setError ] = useState(null);\r\n    const [ teams, setTeams] = useState([]);\r\n    const [ champs, setChamps] = useState([]);\r\n    const [ selectedChamp, setSelectedChamp] = useState('');\r\n    const [ selectedHTeam, setSelectedHTeam] = useState('');\r\n    const [ selectedATeam, setSelectedATeam] = useState('');\r\n     \r\n\r\n    useEffect(\r\n        () => {\r\n            let teamsApi = props.teams.map(team => {\r\n                return {value: team._id, name: team.name}\r\n            });\r\n            let champsApi = props.championships.map(champ => {\r\n                return {value: champ._id, name: champ.name}\r\n            });\r\n\r\n            setTeams(teamsApi);\r\n            setChamps(champsApi);\r\n        }, \r\n        [props]\r\n    );\r\n    \r\n    const onChangeChamp = value => {\r\n        setSelectedChamp(value);\r\n        \r\n        game.championshipId = value;\r\n        setGame(game);\r\n\r\n    }\r\n\r\n    const onChangeHTeam = value => {\r\n        \r\n        if (game.awayTeamId !== value || !selectedATeam !== value) {\r\n            setSelectedHTeam(value);\r\n            game.homeTeamId = value;\r\n            setGame(game);\r\n            setError(null);\r\n        }\r\n        else {\r\n            const name = getTeamName(value, teams);\r\n            setSelectedHTeam('');\r\n            setError(`Error: Team ${name} is selected in Away Team!`);\r\n        }\r\n    }\r\n\r\n    const onChangeATeam = value => {\r\n       \r\n        if (game.homeTeamId !== value || selectedHTeam !== value) {\r\n            setSelectedATeam(value);\r\n            game.awayTeamId = value;\r\n            setGame(game);\r\n            setError(null);\r\n        }\r\n        else {\r\n            const name = getTeamName(value, teams);\r\n            setSelectedATeam('');\r\n            setError(`Error: Team ${name} is selected in Home Team!`);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        \r\n\t\tsetGame({ ...game, [name]: value });\r\n    }\r\n\r\n    const gameValidator = () => {\r\n        const {name, date, championshipId, homeTeamId, awayTeamId, homeGoals, awayGoals} = game;\r\n        if (!name) {\r\n            return \"Error: Fill Name!\"\r\n        }\r\n        if (!date) {\r\n            return \"Error: Fill Date!\"\r\n        }\r\n        if (!championshipId) {\r\n            return \"Error: Select Championship!\"\r\n        }\r\n        if (!homeTeamId) {\r\n            return \"Error: Select Home Team!\"\r\n        }\r\n        if (!awayTeamId) {\r\n            return \"Error: Select Away Team!\"\r\n        }\r\n\r\n        if (!homeGoals) {\r\n            return \"Error: Put result in Home Team!\"\r\n        }\r\n\r\n        if (!awayGoals) {\r\n           return \"Error: Put result in Away Team!\"\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    const submitGame = () => {\r\n        let errorMsg = gameValidator();\r\n        if (errorMsg) {\r\n            setError(errorMsg);\r\n        }\r\n        else {\r\n            const { error } = validateGame(game);\r\n            if (error) {\r\n                setError(error.details[0].message);\r\n            }\r\n            else {\r\n                props.addGame(game);\r\n                setGame(initialState);\r\n                setError(null);\r\n                setSelectedChamp('');\r\n                setSelectedHTeam('');\r\n                setSelectedATeam('');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" value={game ? game.name : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"date\" name=\"date\" value={game ? game.date : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"championshipId\">Championship</label>\r\n                <Select \r\n                    name=\"championshipId\" \r\n                    options={champs} \r\n                    hint=\"select championship\" \r\n                    onChange={onChangeChamp} \r\n                    value={selectedChamp}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"homeTeamId\">Home</label>\r\n                <div className=\"joiner\">\r\n                    <Select\r\n                        name=\"homeTeamId\" \r\n                        options={teams} \r\n                        hint=\"select home team\" \r\n                        onChange={onChangeHTeam} \r\n                        value={selectedHTeam}\r\n                    />\r\n                    <input style={scoreValue} type=\"text\" name=\"homeGoals\" value={game ? game.homeGoals : ''} onChange={handleInputChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"awayTeamId\">Away</label>\r\n                <div className=\"joiner\">\r\n                    <Select\r\n                        name=\"awayTeamId\" \r\n                        options={teams} \r\n                        hint=\"select away team\" \r\n                        onChange={onChangeATeam} \r\n                        value={selectedATeam}\r\n                    />\r\n                    <input style={scoreValue} type=\"text\" name=\"awayGoals\" value={game ? game.awayGoals : ''} onChange={handleInputChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={submitGame} >Add</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n\t)\r\n}\r\n\r\nconst scoreValue = {\r\n    minWidth: \"3em\",\r\n    maxWidth: \"3em\"\r\n}\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nfunction getTeamName(value, teams) {\r\n    const team = teams.find((team) => team.value === value);\r\n    console.log(team);\r\n    return team.name;\r\n}\r\n\r\nfunction validateGame(game) {\r\n\r\n    const schema = {\r\n        name: Joi.string().min(5).max(50).required(),\r\n        date: Joi.date().required(),\r\n        championshipId: Joi.string().min(24).required(),\r\n        homeTeamId: Joi.string().min(24).required(),\r\n        awayTeamId: Joi.string().min(24).required(),\r\n        homeGoals: Joi.number().min(0).required(),\r\n        awayGoals: Joi.number().min(0).required()\r\n    };\r\n\r\n    return Joi.validate(game, schema);\r\n}\r\n\r\nexport default AddGame;","import React, { useState, useEffect } from 'react';\r\nimport Select from '../../custom/selectSearch';\r\n\r\nconst EditGame = (props) => {\r\n    const [ game, setGame ] = useState(props.currentGame);\r\n    const [ teams, setTeams] = useState([]);\r\n    const [ champs, setChamps] = useState([]);\r\n    const [ selectedChamp, setSelectedChamp] = useState(props.currentGame.championshipId);\r\n    const [ selectedHTeam, setSelectedHTeam] = useState(props.currentGame.homeTeamId);\r\n    const [ selectedATeam, setSelectedATeam] = useState(props.currentGame.awayTeamId);\r\n    const [ error, setError ] = useState(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            setGame(props.currentGame);\r\n            let teamsApi = props.teams.map(team => {\r\n                return {value: team._id, name: team.name}\r\n            });\r\n            let champsApi = props.championships.map(champ => {\r\n                return {value: champ._id, name: champ.name}\r\n            });\r\n\r\n            setTeams(teamsApi);\r\n            setChamps(champsApi);\r\n            setSelectedChamp(props.currentGame.championshipId);\r\n            setSelectedHTeam(props.currentGame.homeTeamId);\r\n            setSelectedATeam(props.currentGame.awayTeamId)\r\n        }, \r\n        [props]\r\n    );\r\n\r\n    const handleEdit = () => {\r\n         setError(null);\r\n        props.setEditing(false);\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        const {name, value } = e.target;\r\n\r\n        setGame({ ...game, [name]: value });\r\n    }\r\n\r\n    const onChangeChamp = value => {\r\n        setSelectedChamp(value);\r\n        \r\n        game.championshipId = value;\r\n        setGame(game);\r\n\r\n    }\r\n\r\n    const onChangeHTeam = value => {\r\n        \r\n        if (game.awayTeamId !== value || !selectedATeam !== value) {\r\n            setSelectedHTeam(value);\r\n            game.homeTeamId = value;\r\n            setGame(game);\r\n            setError(null);\r\n        }\r\n        else {\r\n            const name = getTeamName(value, teams);\r\n            setSelectedHTeam('');\r\n            setError(`Error: Team ${name} is selected in Away Team!`);\r\n        }\r\n    }\r\n\r\n    const onChangeATeam = value => {\r\n       \r\n        if (game.homeTeamId !== value || selectedHTeam !== value) {\r\n            setSelectedATeam(value);\r\n            game.awayTeamId = value;\r\n            setGame(game);\r\n            setError(null);\r\n        }\r\n        else {\r\n            const name = getTeamName(value, teams);\r\n            setSelectedATeam('');\r\n            setError(`Error: Team ${name} is selected in Home Team!`);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        setError(null);\r\n        props.updateGame(game);\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" value={game ? game.name : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"date\" name=\"date\" value={game ? game.date : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"championshipId\">Championship</label>\r\n                <Select \r\n                    name=\"championshipId\" \r\n                    options={champs} \r\n                    hint=\"select championship\" \r\n                    onChange={onChangeChamp} \r\n                    value={selectedChamp}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"homeTeamId\">Home</label>\r\n                <div className=\"joiner\">\r\n                    <Select\r\n                        name=\"homeTeamId\" \r\n                        options={teams} \r\n                        hint=\"select home team\" \r\n                        onChange={onChangeHTeam} \r\n                        value={selectedHTeam}\r\n                    />\r\n                    <input style={scoreValue} type=\"text\" name=\"homeGoals\" value={game ? game.homeGoals : ''} onChange={handleInputChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"awayTeamId\">Away</label>\r\n                <div className=\"joiner\">\r\n                    <Select\r\n                        name=\"awayTeamId\" \r\n                        options={teams} \r\n                        hint=\"select away team\" \r\n                        onChange={onChangeATeam} \r\n                        value={selectedATeam}\r\n                    />\r\n                    <input style={scoreValue} type=\"text\" name=\"awayGoals\" value={game ? game.awayGoals : ''} onChange={handleInputChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={handleUpdate} >Update</button>\r\n                <button onClick={handleEdit} className=\"button muted-button\">Cancel</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst scoreValue = {\r\n    minWidth: \"3em\",\r\n    maxWidth: \"3em\"\r\n}\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nfunction getTeamName(value, teams) {\r\n    const team = teams.find((team) => team.value === value);\r\n    console.log(team);\r\n    return team.name;\r\n}\r\n\r\nexport default EditGame;","import React from 'react';\r\nimport ReactTable from '../../custom/bootstraptab';\r\nimport {ImageUtils} from '../../../service/utils';\r\nimport moment from 'moment';\r\n\r\nconst GameTable = (props) => {\r\n    const editRow = (game) => {\r\n        props.editRow(game);\r\n    }\r\n\r\n    const deleteRow = (id) => {\r\n        props.deleteGame(id);\r\n    }\r\n\r\n    const columns = [\r\n        { dataField: '_id', text: 'ID', hidden: true }, \r\n        { dataField: 'name', text: 'Name', sort: true, headerAlign: 'center' },\r\n        { dataField: 'date', text: 'Date', sort: true, headerAlign: 'center', \r\n          formatter: (cell, row) => {\r\n            return (\r\n                <div style={{textAlign:\"center\"}}className=\"date-center\">\r\n                    {`${moment(row.date).format(\"DD-MM-YYYY\")? moment(row.date).format(\"DD-MM-YYYY\"):moment(row.date).format(\"DD-MM-YYYY\") }`}\r\n                </div>\r\n            );\r\n          }\r\n        },\r\n        { dataField: 'championship._id', text: 'CH_ID', hidden: true},\r\n        { dataField: 'championship.name', text: 'Championship', sort: true, headerAlign: 'center'},\r\n        { dataField: 'homeTeam._id', text: 'HOME_ID', hidden: true},\r\n        { dataField: 'homeTeam.logo', text: 'Home', headerAlign: 'center',\r\n          formatter: (cell, row) => {\r\n            return (\r\n            <div className=\"logo\">\r\n                {row.homeTeam.logo && ( <img src={ImageUtils.getImage(row.homeTeam.logo)} alt=\"\"/> )}\r\n            </div>)\r\n          } \r\n        },\r\n        { dataField: 'awayTeam._id', text: 'AWAY_ID', hidden: true},\r\n        { dataField: 'awayTeam.logo', text: 'Away', headerAlign: 'center',\r\n          formatter: (cell, row) => {\r\n            return (\r\n            <div className=\"logo\">\r\n                {row.awayTeam.logo && ( <img src={ImageUtils.getImage(row.awayTeam.logo)} alt=\"\"/> )}\r\n            </div>)\r\n          } \r\n        }, \r\n        { dataField: 'score', text: 'Score', isDummyField: true,\r\n          formatter: (cell, row) => {\r\n              return (<div style={{textAlign:\"center\"}} className=\"score-board\">\r\n                        <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"team\">\r\n                            <div className=\"score-box\">\r\n                                {row.homeGoals}\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"separator\">-</div>\r\n                        <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"team\">\r\n                            <div className=\"score-box\">\r\n                                {row.awayGoals}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            )}\r\n        },\r\n        { dataField: 'actions', text: 'Actions', isDummyField: true,\r\n          formatter: (cell, row ) => {\r\n              return ( \r\n                  <div className=\"button-joiner\">\r\n                      <button\r\n                          onClick={() => {\r\n                              editRow(row);\r\n                          }}\r\n                          className=\"button\"\r\n                      >\r\n                          Edit\r\n                      </button>\r\n                      <button\r\n                          onClick={() => {\r\n                              deleteRow(row._id);\r\n                          }}\r\n                          className=\"button muted-button\"\r\n                      >\r\n                          Delete\r\n                      </button>\r\n                  </div>\r\n              );\r\n          },\r\n          headerAlign: 'center'}\r\n    ];\r\n      \r\n    const defaultSorted = [{dataField: 'name', order: 'asc' }];\r\n\r\n    return(<ReactTable listData={props.games} columns={columns} defaultSorted={defaultSorted} maxRows={4} searchID={'game'}/>);\r\n}\r\n\r\nexport default GameTable;","import React, { useState, useEffect, Fragment } from \"react\";\nimport AddGame from \"../gameComponents/addGame\";\nimport EditGame from \"../gameComponents/editGame\";\nimport GameTable from \"../gameComponents/gameTable\";\nimport ServiceData from \"../../../service/dataUtils\";\nimport Storage from \"../../../service/StorageData\";\nimport moment from 'moment';\n\nconst Game = () => {\n\n    const [ error, setError ] = useState(null);\n\tconst [ games, setGames ] = useState([]);\n\tconst [ championships, setChampionships ] = useState([]);\n\tconst [ teams, setTeams ] = useState([]);\n    const [ currentGame, setCurrentGame ] = useState(\n\t\t{ _id: '', name: '', date: '', championshipId: '', homeTeamId: '', awayTeamId: '', homeGoals: '', awayGoals: '' });\n\t\n\tconst [ editing, setEditing ] = useState(false);\n\n    useEffect(() => {\n        const token = Storage.get('token');\n        if (token) {\n            loadData(token)\n            .then((data) => {\n\t\t\t\t\n                if (data.games) {\n                    setGames(data.games);\n                    setError(null);\n\t\t\t\t}\n\t\t\t\tif (data.champs) {\n\t\t\t\t\tsetChampionships(data.champs);\n\t\t\t\t\tsetError(null);\n\t\t\t\t}\n\t\t\t\tif (data.teams) {\n\t\t\t\t\tsetTeams(data.teams);\n\t\t\t\t\tsetError(null);\n\t\t\t\t}\n                if (data.error) {\n                    setError( data.error );\n                }\n            })\n            .catch(err => {\n                console.log(\"Error: \", err);\n            })\n        }\n\n    }, [currentGame]);\n\n    //Crud operations\n    const _addGame = async (game) => {\n\t\t\n\t\tconst {error, data} = await addGameInBD(game);\n\t\tif (data) {\n\t\t\tsetGames([ ...games, data ]);\n\t\t\tsetError(null); \n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n    }\n\n    const addGameInBD = async (game) => {\n\t\treturn await saveGameBD(game);\n\t}\n\n    const deleteGame = async (id) => {\n\t\tsetEditing(false);\n\t\t\n\t\tconst {error, data} = await deleteGameBD(id);\n\t\tif (data) {\n\t\t\tconst bdGame = data;\n\t\t\tsetGames(games.filter(game => game._id !== bdGame._id));\n\t\t\tsetError(null);\n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n\t\t\n    }\n    \n    const updateGame = async (game) => {\n\t\t\n\t\tconst id = game._id;\n\t\tconst toUpdate = games.find((game) => game._id === id);\n\t\t\n\t\tif (toUpdate) {\n\t\t\tconst {data, error} = await saveGameBD(game);\n\t\t\tif (data) {\n\t\t\t\tlet bdGame = data;\n\t\t\t\tsetEditing(false);\n\t\t\t\tsetGames(games.map(game => (game._id === bdGame._id ? bdGame : game)));\n\t\t\t\tsetError(null);\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\tsetError('Nothing change!');\n\t\t}\n    }\n    \n    const editRow = game => {\n\t\tsetEditing(true);\n\t\tconst {championship, homeTeam, awayTeam} = game;\n\n\t\tsetCurrentGame({ \n\t\t\t_id: game._id, \n\t\t\tname: game.name, \n\t\t\tdate: moment(game.date).format(\"yyyy-MM-DD\"), \n\t\t\tchampionshipId: championship._id, \n\t\t\thomeTeamId: homeTeam._id, \n\t\t\tawayTeamId: awayTeam._id,\n\t\t\thomeGoals: game.homeGoals, \n\t\t\tawayGoals: game.awayGoals \n\t\t});\n    }\n\n\n    return display(error, editing, games, championships, teams, setEditing, currentGame, updateGame, _addGame, editRow, deleteGame);\n}\n\nfunction display(error, editing, games, championships, teams, setEditing, currentGame, updateGame, _addGame, editRow, deleteGame) {\n    return (\n        <div className=\"main\">\n            <div className=\"flex-container\">\n                <div className=\"column-game\">\n                    {editing ? (\n                        <Fragment>\n                            <h2>Edit Game</h2>\n                            <EditGame\n                                editing={editing}\n                                setEditing={setEditing}\n                                currentGame={currentGame}\n                                updateGame={updateGame}\n\t\t\t\t\t\t\t\tchampionships={championships} \n\t\t\t\t\t\t\t\tteams={teams}\n                            />\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <h2>Add Game</h2>\n                            <AddGame addGame={_addGame} championships={championships} teams={teams} />\n                        </Fragment>\n                    )}\n                </div>\n                <div className=\"column-game-table\">\n                    <h2>View Games</h2>\n                    <GameTable games={games} editRow={editRow} deleteGame={deleteGame} />\n                </div>\n            </div>\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\n        </div>\n    )\n}\n\nconst errorStyle = {\n\ttextShadow: \"10px 10px 10px\",\n    color: \"red\"\n}\n\nconst loadData = async (token) => {\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('GET', null, headers);\n\treturn await ServiceData.gameExecute('games', 'championships', 'teams', options);\n}\n\nconst saveGameBD = async (game) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tlet path = `games/${game._id}`;\n\tlet method = 'PUT'\n\tif (!game._id) {\n\t\tpath = \"games\";\n\t\tmethod = \"POST\";\n\t}\n\t\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options(method, game, headers);\n\t\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetGame Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nconst deleteGameBD = async (id) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tconst path = `games/${id}`;\n\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('DELETE', null, headers);\n\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetGame Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\n\nexport default Game;","import React, { useState} from 'react';\r\nimport Joi from 'joi';\r\n\r\nconst AddSeason = (props) => {\r\n    const initialState = {name: '', begin:'', end: ''};\r\n    const [ season, setSeason ] = useState(initialState);\r\n    const [ error, setError ] = useState(null);\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        \r\n\t\tsetSeason({ ...season, [name]: value });\r\n    }\r\n\r\n    const seasonValidator = () => {\r\n        const {name, begin, end} = season;\r\n        if (!name) {\r\n            return \"Error: Fill Name!\"\r\n        }\r\n        if (!begin) {\r\n            return \"Error: Fill Begin Date!\"\r\n        }\r\n        if (!end) {\r\n            return \"Error: Fill End Date!\"\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    const submitSeason = () => {\r\n        let errorMsg = seasonValidator();\r\n        if (errorMsg) {\r\n            setError(errorMsg);\r\n        }\r\n        else {\r\n            const { error } = validateSeason(season);\r\n            if (error) {\r\n                setError(error.details[0].message);\r\n            }\r\n            else {\r\n                props.addSeason(season);\r\n                setSeason(initialState);\r\n                setError(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" value={season ? season.name : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"begin\">Begin Date</label>\r\n                <input type=\"date\" name=\"begin\" value={season ? season.begin : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"end\">End Date</label>\r\n                <input type=\"date\" name=\"end\" value={season ? season.end : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={submitSeason} >Add</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n        </div>\r\n\t)\r\n}\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nfunction validateSeason(season) {\r\n\r\n    const schema = {\r\n        name: Joi.string().min(5).max(50).required(),\r\n        begin: Joi.date().required(),\r\n        end: Joi.date().required()\r\n    };\r\n\r\n    return Joi.validate(season, schema);\r\n}\r\n\r\nexport default AddSeason;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './season.scss';\r\n\r\nclass GameModal extends React.Component {\r\n  render() {\r\n    if(!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    // The gray background\r\n    const backdropStyle = {\r\n      position: 'fixed',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'rgba(0,0,0,0.3)',\r\n      padding: 50,\r\n      zIndex: 9999\r\n    };\r\n\r\n    return (\r\n      <div className=\"backdrop\" style={backdropStyle}>\r\n        <div className=\"game_modal\">\r\n          {this.props.children}\r\n\r\n          <footer className=\"footer\">\r\n            <button onClick={this.props.onClose}>\r\n              Close\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGameModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default GameModal;","import React, { useState, useEffect} from 'react';\r\nimport ReactTable from '../../custom/bootstraptab';\r\nimport GameModal from './gameModal';\r\nimport Switch from \"react-switch\";\r\nimport {ImageUtils} from '../../../service/utils';\r\nimport moment from 'moment';\r\nimport './season.scss';\r\n\r\nconst EditSeason = (props) => {\r\n   \r\n    const [ season, setSeason ] = useState(props.currentSeason);\r\n    const [ open, setOpen ] = useState(false);\r\n    const [ bdGames, setBDGames ] = useState(props.games);\r\n    const [ games, setGames ] = useState([]);\r\n    const [ game, setGame ] = useState(null);\r\n    const [ error, setError ] = useState(null);\r\n    const [ mode, setMode ] = useState(true);\r\n\r\n    useEffect(\r\n        () => {\r\n            setSeason(props.currentSeason);\r\n            setBDGames(props.games);\r\n        }, \r\n        [props]\r\n    );\r\n\r\n    const handleClick = (value) => {\r\n        setMode(!value);\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        \r\n\t\tsetSeason({ ...season, [name]: value });\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        setError(null);\r\n        props.updateSeason(season);\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setError(null);\r\n        props.setEditing(false);\r\n    }\r\n\r\n    const openModal = (values) => {\r\n        console.log(values)\r\n\r\n        const f_games = filterGames(mode, values);\r\n\r\n        setOpen(true);\r\n        setGames(f_games);\r\n    }\r\n\r\n    const filterGames = (filter, values) =>{\r\n        if (filter) {\r\n            const f_games = bdGames.filter(bd => \r\n                !isInArray(bd._id, values) && \r\n                inRange(bd.date, season.begin, season.end));\r\n            return f_games;\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    const isInArray = (id, values) => {\r\n        return values.find(v => v._id === id);\r\n    }\r\n\r\n    const inRange = (date, begin, end) => {\r\n        const value = moment(date).isBetween(begin, end);\r\n        return value;\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setOpen(false);\r\n        setGames([]);\r\n    }\r\n\r\n    const handleMode = (value) => {\r\n        console.log(\"HandleMode\", value);\r\n        if (value) {\r\n            addGame();\r\n        }\r\n        else {\r\n            deleteGame();\r\n        }\r\n    }\r\n\r\n    const deleteGame = () => {\r\n        props.removeGame(season._id, game._id);\r\n        setGame(null);\r\n        setError(null);\r\n        setOpen(false);\r\n    }\r\n\r\n    const addGame = () => {\r\n        props.addGame(season._id, game._id);\r\n        setGame(null);\r\n        setError(null);\r\n        setOpen(false);\r\n    }\r\n\r\n    const selectRow = {\r\n        mode: 'radio',\r\n        clickToSelect: true,\r\n        hideSelectAll: true,\r\n        onSelect: (row, isSelect, rowIndex, e) => {\r\n          if (isSelect) {\r\n              setGame(row);\r\n          }\r\n        }\r\n    }; \r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" value={season ? season.name : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"begin\">Begin Date</label>\r\n                <input type=\"date\" name=\"begin\" value={season ? season.begin : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"form-group\" >\r\n                <label htmlFor=\"end\">End Date</label>\r\n                <input type=\"date\" name=\"end\" value={season ? season.end : ''} onChange={handleInputChange}/>\r\n            </div>\r\n            <div className=\"button-joiner\">\r\n                <button onClick={handleUpdate} >Update</button>\r\n                <button onClick={handleEdit} className=\"button muted-button\">Cancel</button>\r\n            </div>\r\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\r\n            <div className=\"form\">\r\n                <div className=\"form-group form-edit\" >\r\n                    <label htmlFor=\"mode\" className=\"toggle-label\">\r\n                        <Switch\r\n                            name=\"mode\"\r\n                            checked={mode}\r\n                            onChange={()=> handleClick(mode)}\r\n                            className=\"toggle\"\r\n                        />\r\n                        <span>{`${mode ? 'Add' : 'Delete'} Game`}</span>\r\n                    </label>\r\n                    <label htmlFor=\"game\">Game</label>  \r\n                    <div className=\"joiner\">\r\n                        <input type=\"text\" name=\"game\" readOnly value={game ? game.name : ''} />\r\n                        <button className=\"selectBtn\" onClick={()=> openModal(season.games)} >Show</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"button-joiner\">\r\n                    <button onClick={()=> handleMode(mode)} >{mode ? 'Add' : 'Delete'}</button>\r\n                </div>\r\n            </div>\r\n            <GameModal \r\n                    show={open}\r\n                    onClose={closeModal}>\r\n                    <div>Games</div>\r\n                    <ReactTable listData={games} columns={gameColumns} defaultSorted={defaultSorted} maxRows={5} selectRow={selectRow} />\r\n            </GameModal>\r\n        </div>\r\n\t)\r\n}\r\n\r\nconst gameColumns = [\r\n    { dataField: '_id', text: 'ID', hidden: true }, \r\n    { dataField: 'name', text: 'Name', sort: true, headerAlign: 'center' },\r\n    { dataField: 'date', text: 'Date', sort: true, headerAlign: 'center', \r\n        formatter: (cell, row) => {\r\n        return (\r\n            <div style={{textAlign:\"center\"}}className=\"date-center\">\r\n                {`${moment(row.date).format(\"DD-MM-YYYY\")? moment(row.date).format(\"DD-MM-YYYY\"):moment(row.date).format(\"DD-MM-YYYY\") }`}\r\n            </div>\r\n        );\r\n        }\r\n    },\r\n    { dataField: 'championship._id', text: 'CH_ID', hidden: true},\r\n    { dataField: 'championship.name', text: 'Championship', sort: true, headerAlign: 'center'},\r\n    { dataField: 'homeTeam._id', text: 'HOME_ID', hidden: true},\r\n    { dataField: 'homeTeam.logo', text: 'Home', headerAlign: 'center',\r\n        formatter: (cell, row) => {\r\n        return (\r\n        <div className=\"logo\">\r\n            {row.homeTeam.logo && ( <img src={ImageUtils.getImage(row.homeTeam.logo)} alt=\"\"/> )}\r\n        </div>)\r\n        } \r\n    },\r\n    { dataField: 'awayTeam._id', text: 'AWAY_ID', hidden: true},\r\n    { dataField: 'awayTeam.logo', text: 'Away', headerAlign: 'center',\r\n        formatter: (cell, row) => {\r\n        return (\r\n        <div className=\"logo\">\r\n            {row.awayTeam.logo && ( <img src={ImageUtils.getImage(row.awayTeam.logo)} alt=\"\"/> )}\r\n        </div>)\r\n        } \r\n    }, \r\n    { dataField: 'score', text: 'Score', isDummyField: true,\r\n        formatter: (cell, row) => {\r\n            return (<div style={{textAlign:\"center\"}} className=\"score-board\">\r\n                    <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"team\">\r\n                        <div className=\"score-box\">\r\n                            {row.homeGoals}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"separator\">-</div>\r\n                    <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"team\">\r\n                        <div className=\"score-box\">\r\n                            {row.awayGoals}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )}\r\n    }\r\n]\r\n\r\nconst defaultSorted = [{dataField: 'name', order: 'asc' }];\r\n\r\nconst errorStyle = {\r\n    paddingTop: \"15px\",\r\n\ttextShadow: \"10px 10px 10px\",\r\n    color: \"red\"\r\n}\r\n\r\nexport default EditSeason;","import React from 'react';\r\nimport ReactTable from '../../custom/bootstraptab';\r\nimport moment from 'moment';\r\n\r\nconst SeasonTable = (props) => {\r\n\r\n    const editRow = (season) => {\r\n        props.editRow(season);\r\n    }\r\n\r\n    const deleteRow = (id) => {\r\n        props.deleteSeason(id);\r\n    }\r\n\r\n    const columns = [\r\n        { dataField: '_id', text: 'ID', hidden: true }, \r\n        { dataField: 'name', text: 'Name', sort: true, headerAlign: 'center' },\r\n        { dataField: 'begin', text: 'Begin Date', sort: true, headerAlign: 'center', \r\n          formatter: (cell, row) => {\r\n            return (\r\n                <div style={{textAlign:\"center\"}}className=\"date-center\">\r\n                    {`${moment(row.begin).format(\"DD-MM-YYYY\")? moment(row.begin).format(\"DD-MM-YYYY\"):moment(row.begin).format(\"DD-MM-YYYY\") }`}\r\n                </div>\r\n            );\r\n          }\r\n        },\r\n        { dataField: 'end', text: 'End Date', sort: true, headerAlign: 'center', \r\n          formatter: (cell, row) => {\r\n            return (\r\n                <div style={{textAlign:\"center\"}}className=\"date-center\">\r\n                    {`${moment(row.end).format(\"DD-MM-YYYY\")? moment(row.end).format(\"DD-MM-YYYY\"):moment(row.end).format(\"DD-MM-YYYY\") }`}\r\n                </div>\r\n            );\r\n          }\r\n        },\r\n        { dataField: 'goals', text: 'Goals', sort: true, headerAlign: 'center', \r\n            formatter: (cell, row) => {\r\n                return (<div style={{textAlign:\"center\"}} className=\"score-board\">\r\n                        <div style={{display:\"inline-block\", padding: \"2px\"}} className=\"team\">\r\n                            <div className=\"score-box\">\r\n                                {row.goals}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            )}\r\n        },\r\n        { dataField: 'games', text: 'Games', isDummyField: true,\r\n          formatter: (cell, row ) => {\r\n              return (<div style={{textAlign:\"center\"}} className=\"score-board\">\r\n                {row.games.length}\r\n              </div>)\r\n            }\r\n        },\r\n        { dataField: 'actions', text: 'Actions', isDummyField: true,\r\n          formatter: (cell, row ) => {\r\n              return ( \r\n                  <div className=\"button-joiner\">\r\n                      <button\r\n                          onClick={() => {\r\n                              editRow(row);\r\n                          }}\r\n                          className=\"button\"\r\n                      >\r\n                          Edit\r\n                      </button>\r\n                      <button\r\n                          onClick={() => {\r\n                              deleteRow(row._id);\r\n                          }}\r\n                          className=\"button muted-button\"\r\n                      >\r\n                          Delete\r\n                      </button>\r\n                  </div>\r\n              );\r\n          },\r\n          headerAlign: 'center'}\r\n    ];\r\n\r\n    return(<ReactTable listData={props.seasons} columns={columns} defaultSorted={defaultSorted} maxRows={4} searchID={'season'} />);\r\n}\r\n\r\nconst defaultSorted = [{dataField: 'name', order: 'asc' }];\r\n\r\n\r\n\r\nexport default SeasonTable;","import React, { useState, useEffect, Fragment } from \"react\";\nimport AddSeason from \"../seasonComponents/addSeason\";\nimport EditSeason from \"../seasonComponents/editSeason\";\nimport SeasonTable from \"../seasonComponents/seasonTable\";\nimport ServiceData from \"../../../service/dataUtils\";\nimport Storage from \"../../../service/StorageData\";\nimport moment from 'moment';\n\nconst Season = () => {\n    const [ error, setError ] = useState(null);\n    const [ seasons, setSeasons ] = useState([]);\n    const [ games, setGames ] = useState([]);\n    const [ currentSeason, setCurrentSeason ] = useState(\n        { _id: '', name: '', begin: '', end: '', goals: '', games: [] });\n    const [ editing, setEditing ] = useState(false);\n\n        useEffect(() => {\n            const token = Storage.get('token');\n            if (token) {\n                loadData(token)\n                .then((data) => {\n                    \n                    if (data.games) {\n                        setGames(data.games);\n                        setError(null);\n                    }\n                    if (data.seasons) {\n                        setSeasons(data.seasons);\n                        setError(null);\n                    }\n                    if (data.error) {\n                        setError( data.error );\n                    }\n                })\n                .catch(err => {\n                    console.log(\"Error: \", err);\n                })\n            }\n    \n        }, [currentSeason]);\n\n    //Crud operations\n    const _addSeason = async (season) => {\n\t\t\n\t\tconst {error, data} = await addSeasonInBD(season);\n\t\tif (data) {\n\t\t\tsetSeasons([ ...seasons, data ]);\n\t\t\tsetError(null); \n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n    }\n\n    const addSeasonInBD = async (season) => {\n\t\treturn await saveSeasonBD(season);\n\t}\n\n    const deleteSeason = async (id) => {\n\t\tsetEditing(false);\n\t\t\n\t\tconst {error, data} = await deleteSeasonBD(id);\n\t\tif (data) {\n\t\t\tconst bdSeason = data;\n\t\t\tsetSeasons(seasons.filter(season => season._id !== bdSeason._id));\n\t\t\tsetError(null);\n\t\t}\n\t\tif (error) {\n\t\t\tsetError(error);\n\t\t}\n\t\t\n    }\n    \n    const updateSeason = async (season) => {\n\t\t\n\t\tconst id = season._id;\n\t\tconst toUpdate = seasons.find((season) => season._id === id);\n\t\t\n\t\tif (toUpdate) {\n\t\t\tconst {data, error} = await saveSeasonBD(season);\n\t\t\tif (data) {\n\t\t\t\tlet bdSeason = data;\n\t\t\t\tsetEditing(false);\n\t\t\t\tsetSeasons(seasons.map(season => (season._id === bdSeason._id ? bdSeason : season)));\n\t\t\t\tsetError(null);\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\tsetError('Nothing change!');\n\t\t}\n\t}\n\t\n\tconst addGame = async (seasonId, gameId) => {\n\t\tconsole.log(\"ADD_GAME\", seasonId, gameId);\n\t\tconst {data, error} = await addSeasonGame(seasonId, gameId);\n\t\tif (data) {\n\t\t\tlet bdSeason = data;\n\t\t\tsetEditing(false);\n\t\t\tsetSeasons(seasons.map(season => (season._id === bdSeason._id ? bdSeason : season)));\n\t\t\tsetError(null);\n\t\t}\n\t\tif (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetError(error);\n\t\t}\n\t}\n\n\tconst removeGame = async (seasonId, gameId) => {\n\t\tconsole.log(\"REMOVE_GAME\", seasonId, gameId);\n\t\tconst {data, error} = await removeSeasonGame(seasonId, gameId);\n\t\tif (data) {\n\t\t\tlet bdSeason = data;\n\t\t\tsetEditing(false);\n\t\t\tsetSeasons(seasons.map(season => (season._id === bdSeason._id ? bdSeason : season)));\n\t\t\tsetError(null);\n\t\t}\n\t\tif (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetError(error);\n\t\t}\n\t}\n    \n    const editRow = season => {\n\t\tsetEditing(true);\n\t\tconst {games} = season;\n\n\t\tsetCurrentSeason({ \n\t\t\t_id: season._id, \n\t\t\tname: season.name, \n            begin: moment(season.begin).format(\"yyyy-MM-DD\"),\n            end: moment(season.end).format(\"yyyy-MM-DD\"),\n\t\t\tgoals: season.goals, \n\t\t\tgames: games\n\t\t});\n    }\n\n\n    return display(error, editing, seasons, games, setEditing, currentSeason, updateSeason, _addSeason, editRow, deleteSeason, addGame, removeGame);\n\n}\n\nfunction display(error, editing, seasons, games, setEditing, currentSeason, updateSeason, _addSeason, editRow, deleteSeason, addGame, removeGame) {\n    return (\n        <div className=\"main\">\n            <div className=\"flex-container\">\n                <div className=\"column-game\">\n                    {editing ? (\n                        <Fragment>\n                            <h2>Edit Season</h2>\n                            <EditSeason\n                                editing={editing}\n                                setEditing={setEditing}\n                                currentSeason={currentSeason}\n                                updateSeason={updateSeason}\n\t\t\t\t\t\t\t\tgames={games}\n\t\t\t\t\t\t\t\taddGame={addGame}\n\t\t\t\t\t\t\t\tremoveGame={removeGame}\n                            />\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <h2>Add Season</h2>\n                            <AddSeason addSeason={_addSeason} />\n                        </Fragment>\n                    )}\n                </div>\n                <div className=\"column-game-table\">\n                    <h2>View Season</h2>\n                    <SeasonTable seasons={seasons} editRow={editRow} deleteSeason={deleteSeason} />\n                </div>\n            </div>\n            {error && (<span style={errorStyle} className=\"errorMessage\">{error.length > 0 ? error : ''}</span>)}\n        </div>\n    )\n}\n\nconst errorStyle = {\n\ttextShadow: \"10px 10px 10px\",\n    color: \"red\"\n}\n\nconst loadData = async (token) => {\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('GET', null, headers);\n\treturn await ServiceData.seasonExecute('seasons', 'games', options);\n}\n\nconst saveSeasonBD = async (season) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tlet path = `seasons/${season._id}`;\n\tlet method = 'PUT'\n\tif (!season._id) {\n\t\tpath = \"seasons\";\n\t\tmethod = \"POST\";\n\t}\n\t\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options(method, season, headers);\n\t\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetSeason Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nconst addSeasonGame = async(seasonId, gameId) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tlet path = `seasons/${seasonId}/addGame`;\n\tlet method = 'PUT'\n\t\n\tconst data = { gameId: gameId};\n\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options(method, data, headers);\n\t\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"AddSeasonGame Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nconst removeSeasonGame = async(seasonId, gameId) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tlet path = `seasons/${seasonId}/deleteGame`;\n\tlet method = 'PUT'\n\t\n\tconst data = { gameId: gameId};\n\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options(method, data, headers);\n\t\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"DeleteSeasonGame Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\t\n}\n\nconst deleteSeasonBD = async (id) => {\n\tlet result = {};\n\tconst token = Storage.get('token');\n\tconst path = `seasons/${id}`;\n\n\tconst headers = ServiceData.headers(token);\n\tconst options = ServiceData.options('DELETE', null, headers);\n\n\tawait ServiceData.execute(path, options)\n\t\t.then((data) => {\n\t\t\tif (data.data) {\n\t\t\t\tresult.data = data.data;\n\t\t\t}\n\t\t\tif (data.error) {\n\t\t\t\tresult.error = data.error;\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"GetSeason Error: \", err);\n\t\t\tresult.error = err.response.data;\n\t\t});\n\t\n\treturn result;\n}\n\nexport default Season;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Storage from '../../service/StorageData';\n\nconst navStyle = {\n    color : 'white'\n};\n\nconst navigation = (user, logout) => {\n    \n    const link = user && user.name ? `${user.name} (Log Out)`: 'Log Out';\n    \n    if(user.isAdmin) {\n        return(\n            <nav>\n                <ul className=\"nav-links\">\n                    <NavLink style={navStyle} to='/home' activeClassName=\"active-link\">\n                        <li>Home</li>\n                    </NavLink>\n                    <NavLink style={navStyle} to='/user' activeClassName=\"active-link\">\n                        <li>User</li>\n                    </NavLink>\n                    <NavLink style={navStyle} to='/team' activeClassName=\"active-link\">\n                        <li>Team</li>\n                    </NavLink>\n                    <NavLink style={navStyle} to='/championship' activeClassName=\"active-link\">\n                        <li>Championship</li>\n                    </NavLink>\n                    <NavLink style={navStyle} to='/game' activeClassName=\"active-link\">\n                        <li>Game</li>\n                    </NavLink>\n                    <NavLink style={navStyle} to='/season' activeClassName=\"active-link\">\n                        <li>Season</li>\n                    </NavLink>\n                    <NavLink style={navStyle} to='/payment' activeClassName=\"active-link\">\n                        <li>Payment</li>\n                    </NavLink>\n                    <NavLink style={navStyle} to='/login' onClick={logout} activeClassName=\"active-link\">\n                        <li>{link}</li>\n                    </NavLink>\n                </ul>\n            </nav>\n        )\n    }\n\n    return(\n        <nav>\n            <ul className=\"nav-links\">\n                <NavLink style={navStyle} to='/home' activeClassName=\"active-link\">\n                    <li>Home</li>\n                </NavLink>\n                <NavLink style={navStyle} to='/user' activeClassName=\"active-link\">\n                    <li>User</li>\n                </NavLink>\n                <NavLink style={navStyle} to='/login' onClick={logout} activeClassName=\"active-link\">\n                    <li>{link}</li>\n                </NavLink>\n            </ul>\n        </nav>\n    )\n}\n\nexport class Nav extends React.Component {\n\n    logout = () => {\n        Storage.delete('token');\n        Storage.clear()\n    }\n\n    render() {\n        const user = this.props.user;\n        return navigation(user, this.logout)\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Switch, Route } from 'react-router-dom';\nimport { Home } from '../components/pages/normal/index';\nimport User from '../components/pages/normal/user';\nimport Team from '../components/pages/admin/team';\nimport Championship from '../components/pages/admin/championship';\nimport Payment from '../components/pages/admin/payment';\nimport Game from '../components/pages/admin/game';\nimport Season from '../components/pages/admin/season';\nimport ServiceData from \"../service/dataUtils\";\nimport { Nav } from '../components/nav/index';\nimport Storage from '../service/StorageData';\n\nexport default function AppWrapper() {\n    const [user, setUser] = useState({});\n    \n    useEffect(\n        () => {\n        let mounted = true;\n        \n        const loadUser = async () => {\n            const token = Storage.get('token');\n            const headers = ServiceData.headers(token);\n            const options = ServiceData.options('GET', null, headers);\n            await ServiceData.execute('users/me', options)\n                .then((res) => {\n                    if (mounted)\n                        setUser(res.data);\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        };\n        loadUser();\n\n        return () => {\n            mounted = false;\n        }\n    }, []);\n\n    function display() {\n        const token = Storage.get('token');\n        if(!token)\n            return (<Redirect to=\"/login\" />);\n\n        if (user && user.isAdmin) {\n            return(\n                <div className=\"App\">\n                    <Nav user={user}/>\n                    <Switch>\n                        <Route path='/home' component={()=> <Home /> } />\n                        <Route path='/user' component={()=> <User admin={true}/> } />\n                        <Route path='/team' component={Team} />\n                        <Route path='/championship' component={Championship} />\n                        <Route path='/game' component={Game} />\n                        <Route path='/payment' component={Payment} />\n                        <Route path='/season' component={Season} />\n                    </Switch>\n                </div>\n            );\n        }\n        \n        return(\n            <div className=\"App\">\n                <Nav user={user}/>\n                <Switch>\n                    <Route path='/home' component={()=> <Home /> } />\n                    <Route path='/user' component={()=> <User admin={false}/> } />\n                </Switch>\n            </div>\n        );\n\n    }\n    \n\n    return display();\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Login} from '../components/login/login';\nimport {Forgot} from '../components/login/forgot';\nimport {Reset} from '../components/login/reset';\nimport AppWrapper from './routeWrapper';\n\nexport class AllRoutes extends React.Component {\n    render(){\n      return(\n        <Router>\n            <Switch>\n               <Route path=\"/login\" exact component={Login} />\n               <Route path=\"/forgot\" exact component={Forgot} />\n               <Route path=\"/reset/:token\" component={Reset} />\n               <Route path=\"/\" component={AppWrapper} />\n            </Switch>\n        </Router>\n      );\n     }\n}","import React from 'react';\nimport './App.scss';\nimport { AllRoutes } from './routes/allRoutes';\n\nfunction App() {\n  return (\n    <AllRoutes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/slbLogo.75dfd09f.jpg\";","module.exports = {\r\n    server_url : process.env.REACT_APP_SERVER_URL\r\n};"],"sourceRoot":""}